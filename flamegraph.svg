<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="7354"><g><title>perf (5 samples, 0.07%)</title><rect x="0.0000%" y="469" width="0.0680%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="0.0000%" y="453" width="0.0680%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="463.50"></text></g><g><title>do_syscall_64 (5 samples, 0.07%)</title><rect x="0.0000%" y="437" width="0.0680%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="447.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.07%)</title><rect x="0.0000%" y="421" width="0.0680%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="431.50"></text></g><g><title>__do_execve_file.isra.0 (5 samples, 0.07%)</title><rect x="0.0000%" y="405" width="0.0680%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="415.50"></text></g><g><title>search_binary_handler (5 samples, 0.07%)</title><rect x="0.0000%" y="389" width="0.0680%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="399.50"></text></g><g><title>load_elf_binary (5 samples, 0.07%)</title><rect x="0.0000%" y="373" width="0.0680%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="383.50"></text></g><g><title>setup_new_exec (5 samples, 0.07%)</title><rect x="0.0000%" y="357" width="0.0680%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="367.50"></text></g><g><title>perf_event_exec (5 samples, 0.07%)</title><rect x="0.0000%" y="341" width="0.0680%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="351.50"></text></g><g><title>ctx_resched (5 samples, 0.07%)</title><rect x="0.0000%" y="325" width="0.0680%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="335.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.07%)</title><rect x="0.0000%" y="309" width="0.0680%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="319.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="0.0000%" y="293" width="0.0680%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="303.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.07%)</title><rect x="0.0000%" y="277" width="0.0680%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="287.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="0.0000%" y="261" width="0.0680%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="271.50"></text></g><g><title>&lt;cranelift_codegen::isa::x64::inst::Inst as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0680%" y="453" width="0.0136%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.3180%" y="463.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="0.0816%" y="437" width="0.0136%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3316%" y="447.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::finish_ir_inst (1 samples, 0.01%)</title><rect x="0.0952%" y="437" width="0.0136%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.3452%" y="447.50"></text></g><g><title>[[heap]] (3 samples, 0.04%)</title><rect x="0.0816%" y="453" width="0.0408%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="3"/><text x="0.3316%" y="463.50"></text></g><g><title>cranelift_codegen::simple_preopt::simplify::apply_all (1 samples, 0.01%)</title><rect x="0.1088%" y="437" width="0.0136%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.3588%" y="447.50"></text></g><g><title>&lt;regalloc::sparse_set::SparseSetU&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.1224%" y="437" width="0.0136%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="0.3724%" y="447.50"></text></g><g><title>&lt;wasmtime_cranelift::func_environ::FuncEnvironment as cranelift_wasm::environ::spec::FuncEnvironment&gt;::after_translate_operator (1 samples, 0.01%)</title><rect x="0.1360%" y="437" width="0.0136%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="0.3860%" y="447.50"></text></g><g><title>&lt;wast::ast::expr::Instruction as wast::binary::Encode&gt;::encode::encode (1 samples, 0.01%)</title><rect x="0.1496%" y="437" width="0.0136%" height="15" fill="rgb(235,183,28)" fg:x="11" fg:w="1"/><text x="0.3996%" y="447.50"></text></g><g><title>cranelift_bforest::path::Path&lt;F&gt;::next_node (2 samples, 0.03%)</title><rect x="0.1632%" y="437" width="0.0272%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="2"/><text x="0.4132%" y="447.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::compute (1 samples, 0.01%)</title><rect x="0.1904%" y="437" width="0.0136%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="0.4404%" y="447.50"></text></g><g><title>cranelift_codegen::ir::builder::InstBuilder::return_ (1 samples, 0.01%)</title><rect x="0.2040%" y="437" width="0.0136%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="1"/><text x="0.4540%" y="447.50"></text></g><g><title>[[stack]] (8 samples, 0.11%)</title><rect x="0.1224%" y="453" width="0.1088%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="8"/><text x="0.3724%" y="463.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (1 samples, 0.01%)</title><rect x="0.2176%" y="437" width="0.0136%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="0.4676%" y="447.50"></text></g><g><title>cranelift_wasm::code_translator::translate_operator (1 samples, 0.01%)</title><rect x="0.2312%" y="389" width="0.0136%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="1"/><text x="0.4812%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="0.2312%" y="437" width="0.0408%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="3"/><text x="0.4812%" y="447.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function (3 samples, 0.04%)</title><rect x="0.2312%" y="421" width="0.0408%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="3"/><text x="0.4812%" y="431.50"></text></g><g><title>cranelift_wasm::func_translator::FuncTranslator::translate_body (3 samples, 0.04%)</title><rect x="0.2312%" y="405" width="0.0408%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="3"/><text x="0.4812%" y="415.50"></text></g><g><title>wasmparser::operators_validator::OperatorValidator::process_operator (2 samples, 0.03%)</title><rect x="0.2448%" y="389" width="0.0272%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="2"/><text x="0.4948%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;cranelift_codegen::machinst::vcode::VCode&lt;cranelift_codegen::isa::x64::inst::Inst&gt;&gt; (2 samples, 0.03%)</title><rect x="0.2720%" y="421" width="0.0272%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="2"/><text x="0.5220%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;cranelift_codegen::machinst::blockorder::BlockLoweringOrder&gt; (2 samples, 0.03%)</title><rect x="0.2720%" y="405" width="0.0272%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="2"/><text x="0.5220%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.03%)</title><rect x="0.2720%" y="389" width="0.0272%" height="15" fill="rgb(241,83,37)" fg:x="20" fg:w="2"/><text x="0.5220%" y="399.50"></text></g><g><title>systrim (2 samples, 0.03%)</title><rect x="0.2720%" y="373" width="0.0272%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="2"/><text x="0.5220%" y="383.50"></text></g><g><title>__GI___default_morecore (2 samples, 0.03%)</title><rect x="0.2720%" y="357" width="0.0272%" height="15" fill="rgb(226,3,54)" fg:x="20" fg:w="2"/><text x="0.5220%" y="367.50"></text></g><g><title>__GI___sbrk (2 samples, 0.03%)</title><rect x="0.2720%" y="341" width="0.0272%" height="15" fill="rgb(245,192,40)" fg:x="20" fg:w="2"/><text x="0.5220%" y="351.50"></text></g><g><title>__GI___sbrk (2 samples, 0.03%)</title><rect x="0.2720%" y="325" width="0.0272%" height="15" fill="rgb(238,167,29)" fg:x="20" fg:w="2"/><text x="0.5220%" y="335.50"></text></g><g><title>__brk (2 samples, 0.03%)</title><rect x="0.2720%" y="309" width="0.0272%" height="15" fill="rgb(232,182,51)" fg:x="20" fg:w="2"/><text x="0.5220%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="0.2720%" y="293" width="0.0272%" height="15" fill="rgb(231,60,39)" fg:x="20" fg:w="2"/><text x="0.5220%" y="303.50"></text></g><g><title>do_syscall_64 (2 samples, 0.03%)</title><rect x="0.2720%" y="277" width="0.0272%" height="15" fill="rgb(208,69,12)" fg:x="20" fg:w="2"/><text x="0.5220%" y="287.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.03%)</title><rect x="0.2720%" y="261" width="0.0272%" height="15" fill="rgb(235,93,37)" fg:x="20" fg:w="2"/><text x="0.5220%" y="271.50"></text></g><g><title>__do_munmap (2 samples, 0.03%)</title><rect x="0.2720%" y="245" width="0.0272%" height="15" fill="rgb(213,116,39)" fg:x="20" fg:w="2"/><text x="0.5220%" y="255.50"></text></g><g><title>unmap_region (2 samples, 0.03%)</title><rect x="0.2720%" y="229" width="0.0272%" height="15" fill="rgb(222,207,29)" fg:x="20" fg:w="2"/><text x="0.5220%" y="239.50"></text></g><g><title>unmap_vmas (2 samples, 0.03%)</title><rect x="0.2720%" y="213" width="0.0272%" height="15" fill="rgb(206,96,30)" fg:x="20" fg:w="2"/><text x="0.5220%" y="223.50"></text></g><g><title>unmap_single_vma (2 samples, 0.03%)</title><rect x="0.2720%" y="197" width="0.0272%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="2"/><text x="0.5220%" y="207.50"></text></g><g><title>unmap_page_range (2 samples, 0.03%)</title><rect x="0.2720%" y="181" width="0.0272%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="2"/><text x="0.5220%" y="191.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.03%)</title><rect x="0.2720%" y="165" width="0.0272%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="2"/><text x="0.5220%" y="175.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="0.2856%" y="149" width="0.0136%" height="15" fill="rgb(206,27,48)" fg:x="21" fg:w="1"/><text x="0.5356%" y="159.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="0.2856%" y="133" width="0.0136%" height="15" fill="rgb(225,35,8)" fg:x="21" fg:w="1"/><text x="0.5356%" y="143.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="0.2856%" y="117" width="0.0136%" height="15" fill="rgb(250,213,24)" fg:x="21" fg:w="1"/><text x="0.5356%" y="127.50"></text></g><g><title>free_unref_page_list (1 samples, 0.01%)</title><rect x="0.2856%" y="101" width="0.0136%" height="15" fill="rgb(247,123,22)" fg:x="21" fg:w="1"/><text x="0.5356%" y="111.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.01%)</title><rect x="0.2856%" y="85" width="0.0136%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="1"/><text x="0.5356%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="0.3400%" y="405" width="0.0136%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="1"/><text x="0.5900%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="0.3535%" y="405" width="0.0136%" height="15" fill="rgb(251,118,11)" fg:x="26" fg:w="1"/><text x="0.6035%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.3535%" y="389" width="0.0136%" height="15" fill="rgb(217,147,25)" fg:x="26" fg:w="1"/><text x="0.6035%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="0.3535%" y="373" width="0.0136%" height="15" fill="rgb(247,81,37)" fg:x="26" fg:w="1"/><text x="0.6035%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="0.3535%" y="357" width="0.0136%" height="15" fill="rgb(209,12,38)" fg:x="26" fg:w="1"/><text x="0.6035%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="0.3535%" y="341" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="26" fg:w="1"/><text x="0.6035%" y="351.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="0.3535%" y="325" width="0.0136%" height="15" fill="rgb(248,47,43)" fg:x="26" fg:w="1"/><text x="0.6035%" y="335.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="0.3671%" y="405" width="0.0136%" height="15" fill="rgb(221,10,30)" fg:x="27" fg:w="1"/><text x="0.6171%" y="415.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="0.3671%" y="389" width="0.0136%" height="15" fill="rgb(210,229,1)" fg:x="27" fg:w="1"/><text x="0.6171%" y="399.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="0.3671%" y="373" width="0.0136%" height="15" fill="rgb(222,148,37)" fg:x="27" fg:w="1"/><text x="0.6171%" y="383.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="0.3671%" y="357" width="0.0136%" height="15" fill="rgb(234,67,33)" fg:x="27" fg:w="1"/><text x="0.6171%" y="367.50"></text></g><g><title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="0.3671%" y="341" width="0.0136%" height="15" fill="rgb(247,98,35)" fg:x="27" fg:w="1"/><text x="0.6171%" y="351.50"></text></g><g><title>timerqueue_add (1 samples, 0.01%)</title><rect x="0.3671%" y="325" width="0.0136%" height="15" fill="rgb(247,138,52)" fg:x="27" fg:w="1"/><text x="0.6171%" y="335.50"></text></g><g><title>cranelift_codegen::machinst::blockorder::BlockLoweringOrder::new::{{closure}} (1 samples, 0.01%)</title><rect x="0.3807%" y="405" width="0.0136%" height="15" fill="rgb(213,79,30)" fg:x="28" fg:w="1"/><text x="0.6307%" y="415.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::new (2 samples, 0.03%)</title><rect x="0.3943%" y="405" width="0.0272%" height="15" fill="rgb(246,177,23)" fg:x="29" fg:w="2"/><text x="0.6443%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="0.4079%" y="389" width="0.0136%" height="15" fill="rgb(230,62,27)" fg:x="30" fg:w="1"/><text x="0.6579%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="0.4079%" y="373" width="0.0136%" height="15" fill="rgb(216,154,8)" fg:x="30" fg:w="1"/><text x="0.6579%" y="383.50"></text></g><g><title>cranelift_codegen::machinst::lower::visit_block_succs (1 samples, 0.01%)</title><rect x="0.4215%" y="405" width="0.0136%" height="15" fill="rgb(244,35,45)" fg:x="31" fg:w="1"/><text x="0.6715%" y="415.50"></text></g><g><title>cranelift_codegen::machinst::blockorder::BlockLoweringOrder::new::_{{closure}} (1 samples, 0.01%)</title><rect x="0.4215%" y="389" width="0.0136%" height="15" fill="rgb(251,115,12)" fg:x="31" fg:w="1"/><text x="0.6715%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="0.4487%" y="389" width="0.0136%" height="15" fill="rgb(240,54,50)" fg:x="33" fg:w="1"/><text x="0.6987%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.4487%" y="373" width="0.0136%" height="15" fill="rgb(233,84,52)" fg:x="33" fg:w="1"/><text x="0.6987%" y="383.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="0.4487%" y="357" width="0.0136%" height="15" fill="rgb(207,117,47)" fg:x="33" fg:w="1"/><text x="0.6987%" y="367.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="0.4487%" y="341" width="0.0136%" height="15" fill="rgb(249,43,39)" fg:x="33" fg:w="1"/><text x="0.6987%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="0.4487%" y="325" width="0.0136%" height="15" fill="rgb(209,38,44)" fg:x="33" fg:w="1"/><text x="0.6987%" y="335.50"></text></g><g><title>cranelift_codegen::machinst::vcode::VCode&lt;I&gt;::replace_insns_from_regalloc (3 samples, 0.04%)</title><rect x="0.4351%" y="405" width="0.0408%" height="15" fill="rgb(236,212,23)" fg:x="32" fg:w="3"/><text x="0.6851%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;cranelift_codegen::isa::x64::inst::Inst&gt; (1 samples, 0.01%)</title><rect x="0.4623%" y="389" width="0.0136%" height="15" fill="rgb(242,79,21)" fg:x="34" fg:w="1"/><text x="0.7123%" y="399.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (2 samples, 0.03%)</title><rect x="0.4759%" y="405" width="0.0272%" height="15" fill="rgb(211,96,35)" fg:x="35" fg:w="2"/><text x="0.7259%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="0.4759%" y="389" width="0.0272%" height="15" fill="rgb(253,215,40)" fg:x="35" fg:w="2"/><text x="0.7259%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="0.4759%" y="373" width="0.0272%" height="15" fill="rgb(211,81,21)" fg:x="35" fg:w="2"/><text x="0.7259%" y="383.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.03%)</title><rect x="0.4759%" y="357" width="0.0272%" height="15" fill="rgb(208,190,38)" fg:x="35" fg:w="2"/><text x="0.7259%" y="367.50"></text></g><g><title>_int_realloc (2 samples, 0.03%)</title><rect x="0.4759%" y="341" width="0.0272%" height="15" fill="rgb(235,213,38)" fg:x="35" fg:w="2"/><text x="0.7259%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="0.4759%" y="325" width="0.0272%" height="15" fill="rgb(237,122,38)" fg:x="35" fg:w="2"/><text x="0.7259%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="0.5031%" y="405" width="0.0408%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="3"/><text x="0.7531%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="0.5303%" y="389" width="0.0136%" height="15" fill="rgb(240,68,47)" fg:x="39" fg:w="1"/><text x="0.7803%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="0.5303%" y="373" width="0.0136%" height="15" fill="rgb(210,16,53)" fg:x="39" fg:w="1"/><text x="0.7803%" y="383.50"></text></g><g><title>cranelift_codegen::machinst::compile::compile (20 samples, 0.27%)</title><rect x="0.2992%" y="421" width="0.2720%" height="15" fill="rgb(235,124,12)" fg:x="22" fg:w="20"/><text x="0.5492%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.03%)</title><rect x="0.5439%" y="405" width="0.0272%" height="15" fill="rgb(224,169,11)" fg:x="40" fg:w="2"/><text x="0.7939%" y="415.50"></text></g><g><title>cranelift_codegen::isa::x64::inst::Inst::available_in_any_isa (1 samples, 0.01%)</title><rect x="0.5983%" y="389" width="0.0136%" height="15" fill="rgb(250,166,2)" fg:x="44" fg:w="1"/><text x="0.8483%" y="399.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="24.7620%" y="325" width="0.0136%" height="15" fill="rgb(242,216,29)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="24.7620%" y="309" width="0.0136%" height="15" fill="rgb(230,116,27)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="319.50"></text></g><g><title>tick_sched_timer (1 samples, 0.01%)</title><rect x="24.7620%" y="293" width="0.0136%" height="15" fill="rgb(228,99,48)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="303.50"></text></g><g><title>tick_sched_handle (1 samples, 0.01%)</title><rect x="24.7620%" y="277" width="0.0136%" height="15" fill="rgb(253,11,6)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="287.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="24.7620%" y="261" width="0.0136%" height="15" fill="rgb(247,143,39)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="271.50"></text></g><g><title>run_local_timers (1 samples, 0.01%)</title><rect x="24.7620%" y="245" width="0.0136%" height="15" fill="rgb(236,97,10)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="255.50"></text></g><g><title>raise_softirq (1 samples, 0.01%)</title><rect x="24.7620%" y="229" width="0.0136%" height="15" fill="rgb(233,208,19)" fg:x="1821" fg:w="1"/><text x="25.0120%" y="239.50"></text></g><g><title>irq_enter (1 samples, 0.01%)</title><rect x="24.7756%" y="325" width="0.0136%" height="15" fill="rgb(216,164,2)" fg:x="1822" fg:w="1"/><text x="25.0256%" y="335.50"></text></g><g><title>rcu_irq_enter (1 samples, 0.01%)</title><rect x="24.7756%" y="309" width="0.0136%" height="15" fill="rgb(220,129,5)" fg:x="1822" fg:w="1"/><text x="25.0256%" y="319.50"></text></g><g><title>apic_timer_interrupt (3 samples, 0.04%)</title><rect x="24.7620%" y="357" width="0.0408%" height="15" fill="rgb(242,17,10)" fg:x="1821" fg:w="3"/><text x="25.0120%" y="367.50"></text></g><g><title>smp_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="24.7620%" y="341" width="0.0408%" height="15" fill="rgb(242,107,0)" fg:x="1821" fg:w="3"/><text x="25.0120%" y="351.50"></text></g><g><title>irq_exit (1 samples, 0.01%)</title><rect x="24.7892%" y="325" width="0.0136%" height="15" fill="rgb(251,28,31)" fg:x="1823" fg:w="1"/><text x="25.0392%" y="335.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="24.7892%" y="309" width="0.0136%" height="15" fill="rgb(233,223,10)" fg:x="1823" fg:w="1"/><text x="25.0392%" y="319.50"></text></g><g><title>rcu_core_si (1 samples, 0.01%)</title><rect x="24.7892%" y="293" width="0.0136%" height="15" fill="rgb(215,21,27)" fg:x="1823" fg:w="1"/><text x="25.0392%" y="303.50"></text></g><g><title>note_gp_changes (1 samples, 0.01%)</title><rect x="24.7892%" y="277" width="0.0136%" height="15" fill="rgb(232,23,21)" fg:x="1823" fg:w="1"/><text x="25.0392%" y="287.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="24.8572%" y="309" width="0.0136%" height="15" fill="rgb(244,5,23)" fg:x="1828" fg:w="1"/><text x="25.1072%" y="319.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.08%)</title><rect x="24.8028%" y="341" width="0.0816%" height="15" fill="rgb(226,81,46)" fg:x="1824" fg:w="6"/><text x="25.0528%" y="351.50"></text></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="24.8300%" y="325" width="0.0544%" height="15" fill="rgb(247,70,30)" fg:x="1826" fg:w="4"/><text x="25.0800%" y="335.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="24.8708%" y="309" width="0.0136%" height="15" fill="rgb(212,68,19)" fg:x="1829" fg:w="1"/><text x="25.1208%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (7 samples, 0.10%)</title><rect x="24.8028%" y="357" width="0.0952%" height="15" fill="rgb(240,187,13)" fg:x="1824" fg:w="7"/><text x="25.0528%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="24.8844%" y="341" width="0.0136%" height="15" fill="rgb(223,113,26)" fg:x="1830" fg:w="1"/><text x="25.1344%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="24.8844%" y="325" width="0.0136%" height="15" fill="rgb(206,192,2)" fg:x="1830" fg:w="1"/><text x="25.1344%" y="335.50"></text></g><g><title>cranelift_codegen::machinst::buffer::MachBuffer&lt;I&gt;::add_uncond_branch (1,792 samples, 24.37%)</title><rect x="0.6119%" y="389" width="24.3677%" height="15" fill="rgb(241,108,4)" fg:x="45" fg:w="1792"/><text x="0.8619%" y="399.50">cranelift_codegen::machinst::buffer::Ma..</text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1,791 samples, 24.35%)</title><rect x="0.6255%" y="373" width="24.3541%" height="15" fill="rgb(247,173,49)" fg:x="46" fg:w="1791"/><text x="0.8755%" y="383.50">&lt;smallvec::SmallVec&lt;A&gt; as core::iter::t..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.08%)</title><rect x="24.8980%" y="357" width="0.0816%" height="15" fill="rgb(224,114,35)" fg:x="1831" fg:w="6"/><text x="25.1480%" y="367.50"></text></g><g><title>prepare_exit_to_usermode (5 samples, 0.07%)</title><rect x="24.9116%" y="341" width="0.0680%" height="15" fill="rgb(245,159,27)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="351.50"></text></g><g><title>exit_to_usermode_loop (5 samples, 0.07%)</title><rect x="24.9116%" y="325" width="0.0680%" height="15" fill="rgb(245,172,44)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="335.50"></text></g><g><title>schedule (5 samples, 0.07%)</title><rect x="24.9116%" y="309" width="0.0680%" height="15" fill="rgb(236,23,11)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="319.50"></text></g><g><title>__sched_text_start (5 samples, 0.07%)</title><rect x="24.9116%" y="293" width="0.0680%" height="15" fill="rgb(205,117,38)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="303.50"></text></g><g><title>finish_task_switch (5 samples, 0.07%)</title><rect x="24.9116%" y="277" width="0.0680%" height="15" fill="rgb(237,72,25)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="24.9116%" y="261" width="0.0680%" height="15" fill="rgb(244,70,9)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="271.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.07%)</title><rect x="24.9116%" y="245" width="0.0680%" height="15" fill="rgb(217,125,39)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="255.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="24.9116%" y="229" width="0.0680%" height="15" fill="rgb(235,36,10)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="239.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.07%)</title><rect x="24.9116%" y="213" width="0.0680%" height="15" fill="rgb(251,123,47)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="223.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="24.9116%" y="197" width="0.0680%" height="15" fill="rgb(221,13,13)" fg:x="1832" fg:w="5"/><text x="25.1616%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="24.9796%" y="357" width="0.0408%" height="15" fill="rgb(238,131,9)" fg:x="1837" fg:w="3"/><text x="25.2296%" y="367.50"></text></g><g><title>cranelift_codegen::isa::x64::inst::emit::emit (1,797 samples, 24.44%)</title><rect x="0.5983%" y="405" width="24.4357%" height="15" fill="rgb(211,50,8)" fg:x="44" fg:w="1797"/><text x="0.8483%" y="415.50">cranelift_codegen::isa::x64::inst::emit..</text></g><g><title>cranelift_codegen::machinst::buffer::MachBuffer&lt;I&gt;::put4 (4 samples, 0.05%)</title><rect x="24.9796%" y="389" width="0.0544%" height="15" fill="rgb(245,182,24)" fg:x="1837" fg:w="4"/><text x="25.2296%" y="399.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::insert_from_slice (4 samples, 0.05%)</title><rect x="24.9796%" y="373" width="0.0544%" height="15" fill="rgb(242,14,37)" fg:x="1837" fg:w="4"/><text x="25.2296%" y="383.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="25.0204%" y="357" width="0.0136%" height="15" fill="rgb(246,228,12)" fg:x="1840" fg:w="1"/><text x="25.2704%" y="367.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="34.0631%" y="357" width="0.0272%" height="15" fill="rgb(213,55,15)" fg:x="2505" fg:w="2"/><text x="34.3131%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.03%)</title><rect x="34.0631%" y="341" width="0.0272%" height="15" fill="rgb(209,9,3)" fg:x="2505" fg:w="2"/><text x="34.3131%" y="351.50"></text></g><g><title>_int_free (5 samples, 0.07%)</title><rect x="34.0903%" y="357" width="0.0680%" height="15" fill="rgb(230,59,30)" fg:x="2507" fg:w="5"/><text x="34.3403%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="34.1583%" y="309" width="0.0136%" height="15" fill="rgb(209,121,21)" fg:x="2512" fg:w="1"/><text x="34.4083%" y="319.50"></text></g><g><title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="34.1583%" y="293" width="0.0136%" height="15" fill="rgb(220,109,13)" fg:x="2512" fg:w="1"/><text x="34.4083%" y="303.50"></text></g><g><title>timerqueue_add (1 samples, 0.01%)</title><rect x="34.1583%" y="277" width="0.0136%" height="15" fill="rgb(232,18,1)" fg:x="2512" fg:w="1"/><text x="34.4083%" y="287.50"></text></g><g><title>&lt;cranelift_codegen::isa::x64::X64Backend as cranelift_codegen::machinst::MachBackend&gt;::compile_function (2,494 samples, 33.91%)</title><rect x="0.2720%" y="437" width="33.9135%" height="15" fill="rgb(215,41,42)" fg:x="20" fg:w="2494"/><text x="0.5220%" y="447.50">&lt;cranelift_codegen::isa::x64::X64Backend as cranelift_c..</text></g><g><title>cranelift_codegen::machinst::vcode::VCode&lt;I&gt;::emit (2,472 samples, 33.61%)</title><rect x="0.5711%" y="421" width="33.6144%" height="15" fill="rgb(224,123,36)" fg:x="42" fg:w="2472"/><text x="0.8211%" y="431.50">cranelift_codegen::machinst::vcode::VCode&lt;I&gt;::emit</text></g><g><title>cranelift_codegen::machinst::buffer::MachBuffer&lt;I&gt;::bind_label (673 samples, 9.15%)</title><rect x="25.0340%" y="405" width="9.1515%" height="15" fill="rgb(240,125,3)" fg:x="1841" fg:w="673"/><text x="25.2840%" y="415.50">cranelift_cod..</text></g><g><title>cranelift_codegen::machinst::buffer::MachBuffer&lt;I&gt;::truncate_last_branch (668 samples, 9.08%)</title><rect x="25.1020%" y="389" width="9.0835%" height="15" fill="rgb(205,98,50)" fg:x="1846" fg:w="668"/><text x="25.3520%" y="399.50">cranelift_cod..</text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (666 samples, 9.06%)</title><rect x="25.1292%" y="373" width="9.0563%" height="15" fill="rgb(205,185,37)" fg:x="1848" fg:w="666"/><text x="25.3792%" y="383.50">&lt;smallvec::Sm..</text></g><g><title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="34.1583%" y="357" width="0.0272%" height="15" fill="rgb(238,207,15)" fg:x="2512" fg:w="2"/><text x="34.4083%" y="367.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="34.1583%" y="341" width="0.0272%" height="15" fill="rgb(213,199,42)" fg:x="2512" fg:w="2"/><text x="34.4083%" y="351.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="34.1583%" y="325" width="0.0272%" height="15" fill="rgb(235,201,11)" fg:x="2512" fg:w="2"/><text x="34.4083%" y="335.50"></text></g><g><title>tick_sched_timer (1 samples, 0.01%)</title><rect x="34.1719%" y="309" width="0.0136%" height="15" fill="rgb(207,46,11)" fg:x="2513" fg:w="1"/><text x="34.4219%" y="319.50"></text></g><g><title>&lt;cranelift_codegen::isa::x64::inst::Inst as cranelift_codegen::machinst::MachInst&gt;::map_regs (1 samples, 0.01%)</title><rect x="34.1855%" y="437" width="0.0136%" height="15" fill="rgb(241,35,35)" fg:x="2514" fg:w="1"/><text x="34.4355%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="34.1991%" y="437" width="0.0136%" height="15" fill="rgb(243,32,47)" fg:x="2515" fg:w="1"/><text x="34.4491%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="34.1991%" y="421" width="0.0136%" height="15" fill="rgb(247,202,23)" fg:x="2515" fg:w="1"/><text x="34.4491%" y="431.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function (1 samples, 0.01%)</title><rect x="34.1991%" y="405" width="0.0136%" height="15" fill="rgb(219,102,11)" fg:x="2515" fg:w="1"/><text x="34.4491%" y="415.50"></text></g><g><title>cranelift_wasm::func_translator::FuncTranslator::translate_body (1 samples, 0.01%)</title><rect x="34.1991%" y="389" width="0.0136%" height="15" fill="rgb(243,110,44)" fg:x="2515" fg:w="1"/><text x="34.4491%" y="399.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="34.2127%" y="437" width="0.0136%" height="15" fill="rgb(222,74,54)" fg:x="2516" fg:w="1"/><text x="34.4627%" y="447.50"></text></g><g><title>cranelift_codegen::dce::do_dce (1 samples, 0.01%)</title><rect x="34.2263%" y="389" width="0.0136%" height="15" fill="rgb(216,99,12)" fg:x="2517" fg:w="1"/><text x="34.4763%" y="399.50"></text></g><g><title>cranelift_codegen::inst_predicates::has_side_effect (1 samples, 0.01%)</title><rect x="34.2263%" y="373" width="0.0136%" height="15" fill="rgb(226,22,26)" fg:x="2517" fg:w="1"/><text x="34.4763%" y="383.50"></text></g><g><title>cranelift_codegen::ir::instructions::InstructionData::opcode (1 samples, 0.01%)</title><rect x="34.2263%" y="357" width="0.0136%" height="15" fill="rgb(217,163,10)" fg:x="2517" fg:w="1"/><text x="34.4763%" y="367.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::compute (9 samples, 0.12%)</title><rect x="34.2399%" y="389" width="0.1224%" height="15" fill="rgb(213,25,53)" fg:x="2518" fg:w="9"/><text x="34.4899%" y="399.50"></text></g><g><title>cranelift_bforest::path::Path&lt;F&gt;::next (1 samples, 0.01%)</title><rect x="34.3487%" y="373" width="0.0136%" height="15" fill="rgb(252,105,26)" fg:x="2526" fg:w="1"/><text x="34.5987%" y="383.50"></text></g><g><title>cranelift_bforest::path::Path&lt;F&gt;::next_node (1 samples, 0.01%)</title><rect x="34.3487%" y="357" width="0.0136%" height="15" fill="rgb(220,39,43)" fg:x="2526" fg:w="1"/><text x="34.5987%" y="367.50"></text></g><g><title>cranelift_bforest::map::Map&lt;K,V&gt;::insert (2 samples, 0.03%)</title><rect x="34.3758%" y="357" width="0.0272%" height="15" fill="rgb(229,68,48)" fg:x="2528" fg:w="2"/><text x="34.6258%" y="367.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (2 samples, 0.03%)</title><rect x="34.3758%" y="341" width="0.0272%" height="15" fill="rgb(252,8,32)" fg:x="2528" fg:w="2"/><text x="34.6258%" y="351.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="325" width="0.0136%" height="15" fill="rgb(223,20,43)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="335.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="309" width="0.0136%" height="15" fill="rgb(229,81,49)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="319.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="293" width="0.0136%" height="15" fill="rgb(236,28,36)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="277" width="0.0136%" height="15" fill="rgb(249,185,26)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="261" width="0.0136%" height="15" fill="rgb(249,174,33)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="34.3894%" y="245" width="0.0136%" height="15" fill="rgb(233,201,37)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="255.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="34.3894%" y="229" width="0.0136%" height="15" fill="rgb(221,78,26)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="239.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.01%)</title><rect x="34.3894%" y="213" width="0.0136%" height="15" fill="rgb(250,127,30)" fg:x="2529" fg:w="1"/><text x="34.6394%" y="223.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute (5 samples, 0.07%)</title><rect x="34.3623%" y="389" width="0.0680%" height="15" fill="rgb(230,49,44)" fg:x="2527" fg:w="5"/><text x="34.6123%" y="399.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute_block (4 samples, 0.05%)</title><rect x="34.3758%" y="373" width="0.0544%" height="15" fill="rgb(229,67,23)" fg:x="2528" fg:w="4"/><text x="34.6258%" y="383.50"></text></g><g><title>cranelift_bforest::set::Set&lt;K&gt;::insert (2 samples, 0.03%)</title><rect x="34.4030%" y="357" width="0.0272%" height="15" fill="rgb(249,83,47)" fg:x="2530" fg:w="2"/><text x="34.6530%" y="367.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (1 samples, 0.01%)</title><rect x="34.4166%" y="341" width="0.0136%" height="15" fill="rgb(215,43,3)" fg:x="2531" fg:w="1"/><text x="34.6666%" y="351.50"></text></g><g><title>cranelift_codegen::legalizer::simple_legalize (1 samples, 0.01%)</title><rect x="34.4302%" y="389" width="0.0136%" height="15" fill="rgb(238,154,13)" fg:x="2532" fg:w="1"/><text x="34.6802%" y="399.50"></text></g><g><title>cranelift_codegen::context::Context::compile_and_emit (17 samples, 0.23%)</title><rect x="34.2263%" y="421" width="0.2312%" height="15" fill="rgb(219,56,2)" fg:x="2517" fg:w="17"/><text x="34.4763%" y="431.50"></text></g><g><title>cranelift_codegen::context::Context::compile (17 samples, 0.23%)</title><rect x="34.2263%" y="405" width="0.2312%" height="15" fill="rgb(233,0,4)" fg:x="2517" fg:w="17"/><text x="34.4763%" y="415.50"></text></g><g><title>cranelift_codegen::simple_gvn::do_simple_gvn (1 samples, 0.01%)</title><rect x="34.4438%" y="389" width="0.0136%" height="15" fill="rgb(235,30,7)" fg:x="2533" fg:w="1"/><text x="34.6938%" y="399.50"></text></g><g><title>cranelift_frontend::frontend::FunctionBuilder::seal_block (1 samples, 0.01%)</title><rect x="34.4574%" y="389" width="0.0136%" height="15" fill="rgb(250,79,13)" fg:x="2534" fg:w="1"/><text x="34.7074%" y="399.50"></text></g><g><title>cranelift_frontend::ssa::SSABuilder::seal_one_block (1 samples, 0.01%)</title><rect x="34.4574%" y="373" width="0.0136%" height="15" fill="rgb(211,146,34)" fg:x="2534" fg:w="1"/><text x="34.7074%" y="383.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_inst (1 samples, 0.01%)</title><rect x="34.4846%" y="357" width="0.0136%" height="15" fill="rgb(228,22,38)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="34.4846%" y="341" width="0.0136%" height="15" fill="rgb(235,168,5)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="34.4846%" y="325" width="0.0136%" height="15" fill="rgb(221,155,16)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="335.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="34.4846%" y="309" width="0.0136%" height="15" fill="rgb(215,215,53)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="319.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="34.4846%" y="293" width="0.0136%" height="15" fill="rgb(223,4,10)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.4846%" y="277" width="0.0136%" height="15" fill="rgb(234,103,6)" fg:x="2536" fg:w="1"/><text x="34.7346%" y="287.50"></text></g><g><title>cranelift_codegen::ir::layout::Layout::append_block (1 samples, 0.01%)</title><rect x="34.4982%" y="357" width="0.0136%" height="15" fill="rgb(227,97,0)" fg:x="2537" fg:w="1"/><text x="34.7482%" y="367.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (1 samples, 0.01%)</title><rect x="34.4982%" y="341" width="0.0136%" height="15" fill="rgb(234,150,53)" fg:x="2537" fg:w="1"/><text x="34.7482%" y="351.50"></text></g><g><title>cranelift_codegen::ir::layout::Layout::append_inst (3 samples, 0.04%)</title><rect x="34.5118%" y="357" width="0.0408%" height="15" fill="rgb(228,201,54)" fg:x="2538" fg:w="3"/><text x="34.7618%" y="367.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (2 samples, 0.03%)</title><rect x="34.5254%" y="341" width="0.0272%" height="15" fill="rgb(222,22,37)" fg:x="2539" fg:w="2"/><text x="34.7754%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="34.5390%" y="325" width="0.0136%" height="15" fill="rgb(237,53,32)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="34.5390%" y="309" width="0.0136%" height="15" fill="rgb(233,25,53)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="34.5390%" y="293" width="0.0136%" height="15" fill="rgb(210,40,34)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="303.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="34.5390%" y="277" width="0.0136%" height="15" fill="rgb(241,220,44)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.5390%" y="261" width="0.0136%" height="15" fill="rgb(235,28,35)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="271.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="34.5390%" y="245" width="0.0136%" height="15" fill="rgb(210,56,17)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="255.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="34.5390%" y="229" width="0.0136%" height="15" fill="rgb(224,130,29)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="239.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="34.5390%" y="213" width="0.0136%" height="15" fill="rgb(235,212,8)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="223.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="34.5390%" y="197" width="0.0136%" height="15" fill="rgb(223,33,50)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="207.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="34.5390%" y="181" width="0.0136%" height="15" fill="rgb(219,149,13)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="191.50"></text></g><g><title>__count_memcg_events (1 samples, 0.01%)</title><rect x="34.5390%" y="165" width="0.0136%" height="15" fill="rgb(250,156,29)" fg:x="2540" fg:w="1"/><text x="34.7890%" y="175.50"></text></g><g><title>cranelift_codegen::ir::layout::Layout::assign_inst_seq (1 samples, 0.01%)</title><rect x="34.5526%" y="357" width="0.0136%" height="15" fill="rgb(216,193,19)" fg:x="2541" fg:w="1"/><text x="34.8026%" y="367.50"></text></g><g><title>&lt;cranelift_frontend::frontend::FuncInstBuilder as cranelift_codegen::ir::builder::InstBuilderBase&gt;::build (8 samples, 0.11%)</title><rect x="34.4710%" y="373" width="0.1088%" height="15" fill="rgb(216,135,14)" fg:x="2535" fg:w="8"/><text x="34.7210%" y="383.50"></text></g><g><title>cranelift_frontend::ssa::SSABuilder::declare_block_predecessor (1 samples, 0.01%)</title><rect x="34.5662%" y="357" width="0.0136%" height="15" fill="rgb(241,47,5)" fg:x="2542" fg:w="1"/><text x="34.8162%" y="367.50"></text></g><g><title>cranelift_wasm::code_translator::canonicalise_then_jump (9 samples, 0.12%)</title><rect x="34.4710%" y="389" width="0.1224%" height="15" fill="rgb(233,42,35)" fg:x="2535" fg:w="9"/><text x="34.7210%" y="399.50"></text></g><g><title>cranelift_wasm::code_translator::canonicalise_v128_values (1 samples, 0.01%)</title><rect x="34.5798%" y="373" width="0.0136%" height="15" fill="rgb(231,13,6)" fg:x="2543" fg:w="1"/><text x="34.8298%" y="383.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_block (1 samples, 0.01%)</title><rect x="34.5934%" y="357" width="0.0136%" height="15" fill="rgb(207,181,40)" fg:x="2544" fg:w="1"/><text x="34.8434%" y="367.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (1 samples, 0.01%)</title><rect x="34.6070%" y="357" width="0.0136%" height="15" fill="rgb(254,173,49)" fg:x="2545" fg:w="1"/><text x="34.8570%" y="367.50"></text></g><g><title>page_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="229" width="0.0272%" height="15" fill="rgb(221,1,38)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="239.50"></text></g><g><title>do_page_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="213" width="0.0272%" height="15" fill="rgb(206,124,46)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="223.50"></text></g><g><title>__do_page_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="197" width="0.0272%" height="15" fill="rgb(249,21,11)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="207.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="181" width="0.0272%" height="15" fill="rgb(222,201,40)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="191.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="165" width="0.0272%" height="15" fill="rgb(235,61,29)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="175.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="34.6478%" y="149" width="0.0272%" height="15" fill="rgb(219,207,3)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="159.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="34.6478%" y="133" width="0.0272%" height="15" fill="rgb(222,56,46)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="143.50"></text></g><g><title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="34.6478%" y="117" width="0.0272%" height="15" fill="rgb(239,76,54)" fg:x="2548" fg:w="2"/><text x="34.8978%" y="127.50"></text></g><g><title>__lru_cache_add (1 samples, 0.01%)</title><rect x="34.6614%" y="101" width="0.0136%" height="15" fill="rgb(231,124,27)" fg:x="2549" fg:w="1"/><text x="34.9114%" y="111.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.01%)</title><rect x="34.6614%" y="85" width="0.0136%" height="15" fill="rgb(249,195,6)" fg:x="2549" fg:w="1"/><text x="34.9114%" y="95.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="34.6614%" y="69" width="0.0136%" height="15" fill="rgb(237,174,47)" fg:x="2549" fg:w="1"/><text x="34.9114%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="34.6478%" y="309" width="0.0408%" height="15" fill="rgb(206,201,31)" fg:x="2548" fg:w="3"/><text x="34.8978%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="34.6478%" y="293" width="0.0408%" height="15" fill="rgb(231,57,52)" fg:x="2548" fg:w="3"/><text x="34.8978%" y="303.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.04%)</title><rect x="34.6478%" y="277" width="0.0408%" height="15" fill="rgb(248,177,22)" fg:x="2548" fg:w="3"/><text x="34.8978%" y="287.50"></text></g><g><title>_int_realloc (3 samples, 0.04%)</title><rect x="34.6478%" y="261" width="0.0408%" height="15" fill="rgb(215,211,37)" fg:x="2548" fg:w="3"/><text x="34.8978%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="34.6478%" y="245" width="0.0408%" height="15" fill="rgb(241,128,51)" fg:x="2548" fg:w="3"/><text x="34.8978%" y="255.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="34.6750%" y="229" width="0.0136%" height="15" fill="rgb(227,165,31)" fg:x="2550" fg:w="1"/><text x="34.9250%" y="239.50"></text></g><g><title>page_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="309" width="0.0272%" height="15" fill="rgb(228,167,24)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="319.50"></text></g><g><title>do_page_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="293" width="0.0272%" height="15" fill="rgb(228,143,12)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="303.50"></text></g><g><title>__do_page_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="277" width="0.0272%" height="15" fill="rgb(249,149,8)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="287.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="261" width="0.0272%" height="15" fill="rgb(243,35,44)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="271.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="245" width="0.0272%" height="15" fill="rgb(246,89,9)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="255.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="34.6886%" y="229" width="0.0272%" height="15" fill="rgb(233,213,13)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="239.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="34.6886%" y="213" width="0.0272%" height="15" fill="rgb(233,141,41)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="223.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="34.6886%" y="197" width="0.0272%" height="15" fill="rgb(239,167,4)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="34.6886%" y="181" width="0.0272%" height="15" fill="rgb(209,217,16)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="191.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="34.6886%" y="165" width="0.0272%" height="15" fill="rgb(219,88,35)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="175.50"></text></g><g><title>clear_page_erms (2 samples, 0.03%)</title><rect x="34.6886%" y="149" width="0.0272%" height="15" fill="rgb(220,193,23)" fg:x="2551" fg:w="2"/><text x="34.9386%" y="159.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function (37 samples, 0.50%)</title><rect x="34.2263%" y="437" width="0.5031%" height="15" fill="rgb(230,90,52)" fg:x="2517" fg:w="37"/><text x="34.4763%" y="447.50"></text></g><g><title>cranelift_wasm::func_translator::FuncTranslator::translate_body (20 samples, 0.27%)</title><rect x="34.4574%" y="421" width="0.2720%" height="15" fill="rgb(252,106,19)" fg:x="2534" fg:w="20"/><text x="34.7074%" y="431.50"></text></g><g><title>cranelift_wasm::code_translator::translate_operator (20 samples, 0.27%)</title><rect x="34.4574%" y="405" width="0.2720%" height="15" fill="rgb(206,74,20)" fg:x="2534" fg:w="20"/><text x="34.7074%" y="415.50"></text></g><g><title>cranelift_wasm::translation_utils::block_with_params (10 samples, 0.14%)</title><rect x="34.5934%" y="389" width="0.1360%" height="15" fill="rgb(230,138,44)" fg:x="2544" fg:w="10"/><text x="34.8434%" y="399.50"></text></g><g><title>cranelift_frontend::frontend::FunctionBuilder::create_block (10 samples, 0.14%)</title><rect x="34.5934%" y="373" width="0.1360%" height="15" fill="rgb(235,182,43)" fg:x="2544" fg:w="10"/><text x="34.8434%" y="383.50"></text></g><g><title>cranelift_frontend::ssa::SSABuilder::declare_block (8 samples, 0.11%)</title><rect x="34.6206%" y="357" width="0.1088%" height="15" fill="rgb(242,16,51)" fg:x="2546" fg:w="8"/><text x="34.8706%" y="367.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (8 samples, 0.11%)</title><rect x="34.6206%" y="341" width="0.1088%" height="15" fill="rgb(248,9,4)" fg:x="2546" fg:w="8"/><text x="34.8706%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (8 samples, 0.11%)</title><rect x="34.6206%" y="325" width="0.1088%" height="15" fill="rgb(210,31,22)" fg:x="2546" fg:w="8"/><text x="34.8706%" y="335.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="34.7158%" y="309" width="0.0136%" height="15" fill="rgb(239,54,39)" fg:x="2553" fg:w="1"/><text x="34.9658%" y="319.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="34.7158%" y="293" width="0.0136%" height="15" fill="rgb(230,99,41)" fg:x="2553" fg:w="1"/><text x="34.9658%" y="303.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="34.7294%" y="437" width="0.0272%" height="15" fill="rgb(253,106,12)" fg:x="2554" fg:w="2"/><text x="34.9794%" y="447.50"></text></g><g><title>cranelift_bforest::set::Set&lt;K&gt;::insert (1 samples, 0.01%)</title><rect x="34.7566%" y="437" width="0.0136%" height="15" fill="rgb(213,46,41)" fg:x="2556" fg:w="1"/><text x="35.0066%" y="447.50"></text></g><g><title>error_entry (1 samples, 0.01%)</title><rect x="34.7838%" y="277" width="0.0136%" height="15" fill="rgb(215,133,35)" fg:x="2558" fg:w="1"/><text x="35.0338%" y="287.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.01%)</title><rect x="34.7974%" y="165" width="0.0136%" height="15" fill="rgb(213,28,5)" fg:x="2559" fg:w="1"/><text x="35.0474%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="34.7974%" y="149" width="0.0136%" height="15" fill="rgb(215,77,49)" fg:x="2559" fg:w="1"/><text x="35.0474%" y="159.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="34.7974%" y="133" width="0.0136%" height="15" fill="rgb(248,100,22)" fg:x="2559" fg:w="1"/><text x="35.0474%" y="143.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="34.7974%" y="117" width="0.0136%" height="15" fill="rgb(208,67,9)" fg:x="2559" fg:w="1"/><text x="35.0474%" y="127.50"></text></g><g><title>cranelift_bforest::map::Map&lt;K,V&gt;::insert (4 samples, 0.05%)</title><rect x="34.7702%" y="389" width="0.0544%" height="15" fill="rgb(219,133,21)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="399.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (4 samples, 0.05%)</title><rect x="34.7702%" y="373" width="0.0544%" height="15" fill="rgb(246,46,29)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="34.7702%" y="357" width="0.0544%" height="15" fill="rgb(246,185,52)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="34.7702%" y="341" width="0.0544%" height="15" fill="rgb(252,136,11)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="351.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.05%)</title><rect x="34.7702%" y="325" width="0.0544%" height="15" fill="rgb(219,138,53)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="335.50"></text></g><g><title>_int_realloc (4 samples, 0.05%)</title><rect x="34.7702%" y="309" width="0.0544%" height="15" fill="rgb(211,51,23)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="34.7702%" y="293" width="0.0544%" height="15" fill="rgb(247,221,28)" fg:x="2557" fg:w="4"/><text x="35.0202%" y="303.50"></text></g><g><title>page_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="277" width="0.0272%" height="15" fill="rgb(251,222,45)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="287.50"></text></g><g><title>do_page_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="261" width="0.0272%" height="15" fill="rgb(217,162,53)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="271.50"></text></g><g><title>__do_page_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="245" width="0.0272%" height="15" fill="rgb(229,93,14)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="255.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="229" width="0.0272%" height="15" fill="rgb(209,67,49)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="239.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="213" width="0.0272%" height="15" fill="rgb(213,87,29)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="223.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="34.7974%" y="197" width="0.0272%" height="15" fill="rgb(205,151,52)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="207.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="34.7974%" y="181" width="0.0272%" height="15" fill="rgb(253,215,39)" fg:x="2559" fg:w="2"/><text x="35.0474%" y="191.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.01%)</title><rect x="34.8110%" y="165" width="0.0136%" height="15" fill="rgb(221,220,41)" fg:x="2560" fg:w="1"/><text x="35.0610%" y="175.50"></text></g><g><title>__lru_cache_add (1 samples, 0.01%)</title><rect x="34.8110%" y="149" width="0.0136%" height="15" fill="rgb(218,133,21)" fg:x="2560" fg:w="1"/><text x="35.0610%" y="159.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.01%)</title><rect x="34.8110%" y="133" width="0.0136%" height="15" fill="rgb(221,193,43)" fg:x="2560" fg:w="1"/><text x="35.0610%" y="143.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.01%)</title><rect x="34.8110%" y="117" width="0.0136%" height="15" fill="rgb(240,128,52)" fg:x="2560" fg:w="1"/><text x="35.0610%" y="127.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute (5 samples, 0.07%)</title><rect x="34.7702%" y="421" width="0.0680%" height="15" fill="rgb(253,114,12)" fg:x="2557" fg:w="5"/><text x="35.0202%" y="431.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute_block (5 samples, 0.07%)</title><rect x="34.7702%" y="405" width="0.0680%" height="15" fill="rgb(215,223,47)" fg:x="2557" fg:w="5"/><text x="35.0202%" y="415.50"></text></g><g><title>cranelift_bforest::set::Set&lt;K&gt;::insert (1 samples, 0.01%)</title><rect x="34.8246%" y="389" width="0.0136%" height="15" fill="rgb(248,225,23)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="399.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (1 samples, 0.01%)</title><rect x="34.8246%" y="373" width="0.0136%" height="15" fill="rgb(250,108,0)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="34.8246%" y="357" width="0.0136%" height="15" fill="rgb(228,208,7)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="34.8246%" y="341" width="0.0136%" height="15" fill="rgb(244,45,10)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="34.8246%" y="325" width="0.0136%" height="15" fill="rgb(207,125,25)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="335.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="34.8246%" y="309" width="0.0136%" height="15" fill="rgb(210,195,18)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.8246%" y="293" width="0.0136%" height="15" fill="rgb(249,80,12)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="303.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="34.8246%" y="277" width="0.0136%" height="15" fill="rgb(221,65,9)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="287.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="34.8246%" y="261" width="0.0136%" height="15" fill="rgb(235,49,36)" fg:x="2561" fg:w="1"/><text x="35.0746%" y="271.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::compute (4 samples, 0.05%)</title><rect x="34.8382%" y="405" width="0.0544%" height="15" fill="rgb(225,32,20)" fg:x="2562" fg:w="4"/><text x="35.0882%" y="415.50"></text></g><g><title>cranelift_bforest::path::Path&lt;F&gt;::next (1 samples, 0.01%)</title><rect x="34.8790%" y="389" width="0.0136%" height="15" fill="rgb(215,141,46)" fg:x="2565" fg:w="1"/><text x="35.1290%" y="399.50"></text></g><g><title>cranelift_bforest::map::Map&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="34.9062%" y="373" width="0.0136%" height="15" fill="rgb(250,160,47)" fg:x="2567" fg:w="1"/><text x="35.1562%" y="383.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (1 samples, 0.01%)</title><rect x="34.9062%" y="357" width="0.0136%" height="15" fill="rgb(216,222,40)" fg:x="2567" fg:w="1"/><text x="35.1562%" y="367.50"></text></g><g><title>cranelift_codegen::licm::do_licm (7 samples, 0.10%)</title><rect x="34.8382%" y="421" width="0.0952%" height="15" fill="rgb(234,217,39)" fg:x="2562" fg:w="7"/><text x="35.0882%" y="431.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute (3 samples, 0.04%)</title><rect x="34.8926%" y="405" width="0.0408%" height="15" fill="rgb(207,178,40)" fg:x="2566" fg:w="3"/><text x="35.1426%" y="415.50"></text></g><g><title>cranelift_codegen::flowgraph::ControlFlowGraph::compute_block (3 samples, 0.04%)</title><rect x="34.8926%" y="389" width="0.0408%" height="15" fill="rgb(221,136,13)" fg:x="2566" fg:w="3"/><text x="35.1426%" y="399.50"></text></g><g><title>cranelift_bforest::set::Set&lt;K&gt;::insert (1 samples, 0.01%)</title><rect x="34.9198%" y="373" width="0.0136%" height="15" fill="rgb(249,199,10)" fg:x="2568" fg:w="1"/><text x="35.1698%" y="383.50"></text></g><g><title>cranelift_bforest::pool::NodePool&lt;F&gt;::alloc_node (1 samples, 0.01%)</title><rect x="34.9198%" y="357" width="0.0136%" height="15" fill="rgb(249,222,13)" fg:x="2568" fg:w="1"/><text x="35.1698%" y="367.50"></text></g><g><title>cranelift_codegen::context::Context::compile (14 samples, 0.19%)</title><rect x="34.7702%" y="437" width="0.1904%" height="15" fill="rgb(244,185,38)" fg:x="2557" fg:w="14"/><text x="35.0202%" y="447.50"></text></g><g><title>cranelift_codegen::remove_constant_phis::do_remove_constant_phis (2 samples, 0.03%)</title><rect x="34.9334%" y="421" width="0.0272%" height="15" fill="rgb(236,202,9)" fg:x="2569" fg:w="2"/><text x="35.1834%" y="431.50"></text></g><g><title>cranelift_codegen::inst_predicates::has_side_effect (1 samples, 0.01%)</title><rect x="34.9606%" y="437" width="0.0136%" height="15" fill="rgb(250,229,37)" fg:x="2571" fg:w="1"/><text x="35.2106%" y="447.50"></text></g><g><title>cranelift_codegen::isa::x64::inst::Inst::available_in_any_isa (1 samples, 0.01%)</title><rect x="34.9742%" y="437" width="0.0136%" height="15" fill="rgb(206,174,23)" fg:x="2572" fg:w="1"/><text x="35.2242%" y="447.50"></text></g><g><title>cranelift_codegen::machinst::buffer::MachBuffer&lt;I&gt;::add_uncond_branch (1 samples, 0.01%)</title><rect x="34.9878%" y="437" width="0.0136%" height="15" fill="rgb(211,33,43)" fg:x="2573" fg:w="1"/><text x="35.2378%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="35.0965%" y="405" width="0.0272%" height="15" fill="rgb(245,58,50)" fg:x="2581" fg:w="2"/><text x="35.3465%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="35.0965%" y="389" width="0.0272%" height="15" fill="rgb(244,68,36)" fg:x="2581" fg:w="2"/><text x="35.3465%" y="399.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.03%)</title><rect x="35.0965%" y="373" width="0.0272%" height="15" fill="rgb(232,229,15)" fg:x="2581" fg:w="2"/><text x="35.3465%" y="383.50"></text></g><g><title>_int_realloc (2 samples, 0.03%)</title><rect x="35.0965%" y="357" width="0.0272%" height="15" fill="rgb(254,30,23)" fg:x="2581" fg:w="2"/><text x="35.3465%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="35.0965%" y="341" width="0.0272%" height="15" fill="rgb(235,160,14)" fg:x="2581" fg:w="2"/><text x="35.3465%" y="351.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="325" width="0.0136%" height="15" fill="rgb(212,155,44)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="335.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="309" width="0.0136%" height="15" fill="rgb(226,2,50)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="319.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="293" width="0.0136%" height="15" fill="rgb(234,177,6)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="277" width="0.0136%" height="15" fill="rgb(217,24,9)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="261" width="0.0136%" height="15" fill="rgb(220,13,46)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="35.1101%" y="245" width="0.0136%" height="15" fill="rgb(239,221,27)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="255.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="35.1101%" y="229" width="0.0136%" height="15" fill="rgb(222,198,25)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="239.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.01%)</title><rect x="35.1101%" y="213" width="0.0136%" height="15" fill="rgb(211,99,13)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="35.1101%" y="197" width="0.0136%" height="15" fill="rgb(232,111,31)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="207.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="35.1101%" y="181" width="0.0136%" height="15" fill="rgb(245,82,37)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="191.50"></text></g><g><title>rmqueue (1 samples, 0.01%)</title><rect x="35.1101%" y="165" width="0.0136%" height="15" fill="rgb(227,149,46)" fg:x="2582" fg:w="1"/><text x="35.3601%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;cranelift_codegen::isa::x64::inst::Inst&gt; (1 samples, 0.01%)</title><rect x="35.1237%" y="405" width="0.0136%" height="15" fill="rgb(218,36,50)" fg:x="2583" fg:w="1"/><text x="35.3737%" y="415.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::finish_ir_inst (1 samples, 0.01%)</title><rect x="35.1373%" y="405" width="0.0136%" height="15" fill="rgb(226,80,48)" fg:x="2584" fg:w="1"/><text x="35.3873%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::rev::Rev&lt;alloc::vec::drain::Drain&lt;cranelift_codegen::machinst::lower::InstTuple&lt;cranelift_codegen::isa::x64::inst::Inst&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="35.1373%" y="389" width="0.0136%" height="15" fill="rgb(238,224,15)" fg:x="2584" fg:w="1"/><text x="35.3873%" y="399.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::lower_edge (1 samples, 0.01%)</title><rect x="35.1509%" y="405" width="0.0136%" height="15" fill="rgb(241,136,10)" fg:x="2585" fg:w="1"/><text x="35.4009%" y="415.50"></text></g><g><title>error_entry (1 samples, 0.01%)</title><rect x="35.1645%" y="405" width="0.0136%" height="15" fill="rgb(208,32,45)" fg:x="2586" fg:w="1"/><text x="35.4145%" y="415.50"></text></g><g><title>page_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="405" width="0.0272%" height="15" fill="rgb(207,135,9)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="415.50"></text></g><g><title>do_page_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="389" width="0.0272%" height="15" fill="rgb(206,86,44)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="399.50"></text></g><g><title>__do_page_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="373" width="0.0272%" height="15" fill="rgb(245,177,15)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="383.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="357" width="0.0272%" height="15" fill="rgb(206,64,50)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="367.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="341" width="0.0272%" height="15" fill="rgb(234,36,40)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="351.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="35.1781%" y="325" width="0.0272%" height="15" fill="rgb(213,64,8)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="335.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="35.1781%" y="309" width="0.0272%" height="15" fill="rgb(210,75,36)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="319.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="35.1781%" y="293" width="0.0272%" height="15" fill="rgb(229,88,21)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="35.1781%" y="277" width="0.0272%" height="15" fill="rgb(252,204,47)" fg:x="2587" fg:w="2"/><text x="35.4281%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="35.1917%" y="261" width="0.0136%" height="15" fill="rgb(208,77,27)" fg:x="2588" fg:w="1"/><text x="35.4417%" y="271.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="35.1917%" y="245" width="0.0136%" height="15" fill="rgb(221,76,26)" fg:x="2588" fg:w="1"/><text x="35.4417%" y="255.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::lower (16 samples, 0.22%)</title><rect x="35.0014%" y="421" width="0.2176%" height="15" fill="rgb(225,139,18)" fg:x="2574" fg:w="16"/><text x="35.2514%" y="431.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="35.2053%" y="405" width="0.0136%" height="15" fill="rgb(230,137,11)" fg:x="2589" fg:w="1"/><text x="35.4553%" y="415.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="35.2053%" y="389" width="0.0136%" height="15" fill="rgb(212,28,1)" fg:x="2589" fg:w="1"/><text x="35.4553%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regalloc::bt_main::PerRealReg&gt;&gt; (1 samples, 0.01%)</title><rect x="35.2189%" y="389" width="0.0136%" height="15" fill="rgb(248,164,17)" fg:x="2590" fg:w="1"/><text x="35.4689%" y="399.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.2189%" y="373" width="0.0136%" height="15" fill="rgb(222,171,42)" fg:x="2590" fg:w="1"/><text x="35.4689%" y="383.50"></text></g><g><title>regalloc::analysis_data_flow::add_raw_reg_vecs_for_insn (1 samples, 0.01%)</title><rect x="35.2325%" y="389" width="0.0136%" height="15" fill="rgb(243,84,45)" fg:x="2591" fg:w="1"/><text x="35.4825%" y="399.50"></text></g><g><title>account_process_tick (1 samples, 0.01%)</title><rect x="98.5858%" y="229" width="0.0136%" height="15" fill="rgb(252,49,23)" fg:x="7250" fg:w="1"/><text x="98.8358%" y="239.50"></text></g><g><title>account_user_time (1 samples, 0.01%)</title><rect x="98.5858%" y="213" width="0.0136%" height="15" fill="rgb(215,19,7)" fg:x="7250" fg:w="1"/><text x="98.8358%" y="223.50"></text></g><g><title>cpuacct_account_field (1 samples, 0.01%)</title><rect x="98.5858%" y="197" width="0.0136%" height="15" fill="rgb(238,81,41)" fg:x="7250" fg:w="1"/><text x="98.8358%" y="207.50"></text></g><g><title>apic_timer_interrupt (3 samples, 0.04%)</title><rect x="98.5722%" y="341" width="0.0408%" height="15" fill="rgb(210,199,37)" fg:x="7249" fg:w="3"/><text x="98.8222%" y="351.50"></text></g><g><title>smp_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="98.5722%" y="325" width="0.0408%" height="15" fill="rgb(244,192,49)" fg:x="7249" fg:w="3"/><text x="98.8222%" y="335.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.04%)</title><rect x="98.5722%" y="309" width="0.0408%" height="15" fill="rgb(226,211,11)" fg:x="7249" fg:w="3"/><text x="98.8222%" y="319.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.04%)</title><rect x="98.5722%" y="293" width="0.0408%" height="15" fill="rgb(236,162,54)" fg:x="7249" fg:w="3"/><text x="98.8222%" y="303.50"></text></g><g><title>tick_sched_timer (2 samples, 0.03%)</title><rect x="98.5858%" y="277" width="0.0272%" height="15" fill="rgb(220,229,9)" fg:x="7250" fg:w="2"/><text x="98.8358%" y="287.50"></text></g><g><title>tick_sched_handle (2 samples, 0.03%)</title><rect x="98.5858%" y="261" width="0.0272%" height="15" fill="rgb(250,87,22)" fg:x="7250" fg:w="2"/><text x="98.8358%" y="271.50"></text></g><g><title>update_process_times (2 samples, 0.03%)</title><rect x="98.5858%" y="245" width="0.0272%" height="15" fill="rgb(239,43,17)" fg:x="7250" fg:w="2"/><text x="98.8358%" y="255.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="98.5994%" y="229" width="0.0136%" height="15" fill="rgb(231,177,25)" fg:x="7251" fg:w="1"/><text x="98.8494%" y="239.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="98.5994%" y="213" width="0.0136%" height="15" fill="rgb(219,179,1)" fg:x="7251" fg:w="1"/><text x="98.8494%" y="223.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="98.5994%" y="197" width="0.0136%" height="15" fill="rgb(238,219,53)" fg:x="7251" fg:w="1"/><text x="98.8494%" y="207.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.01%)</title><rect x="98.5994%" y="181" width="0.0136%" height="15" fill="rgb(232,167,36)" fg:x="7251" fg:w="1"/><text x="98.8494%" y="191.50"></text></g><g><title>regalloc::analysis_control_flow::calc_dom_tree (2 samples, 0.03%)</title><rect x="98.6130%" y="341" width="0.0272%" height="15" fill="rgb(244,19,51)" fg:x="7252" fg:w="2"/><text x="98.8630%" y="351.50"></text></g><g><title>ret_from_intr (1 samples, 0.01%)</title><rect x="98.6402%" y="341" width="0.0136%" height="15" fill="rgb(224,6,22)" fg:x="7254" fg:w="1"/><text x="98.8902%" y="351.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.08%)</title><rect x="98.6538%" y="341" width="0.0816%" height="15" fill="rgb(224,145,5)" fg:x="7255" fg:w="6"/><text x="98.9038%" y="351.50"></text></g><g><title>prepare_exit_to_usermode (6 samples, 0.08%)</title><rect x="98.6538%" y="325" width="0.0816%" height="15" fill="rgb(234,130,49)" fg:x="7255" fg:w="6"/><text x="98.9038%" y="335.50"></text></g><g><title>exit_to_usermode_loop (5 samples, 0.07%)</title><rect x="98.6674%" y="309" width="0.0680%" height="15" fill="rgb(254,6,2)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="319.50"></text></g><g><title>schedule (5 samples, 0.07%)</title><rect x="98.6674%" y="293" width="0.0680%" height="15" fill="rgb(208,96,46)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="303.50"></text></g><g><title>__sched_text_start (5 samples, 0.07%)</title><rect x="98.6674%" y="277" width="0.0680%" height="15" fill="rgb(239,3,39)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="287.50"></text></g><g><title>finish_task_switch (5 samples, 0.07%)</title><rect x="98.6674%" y="261" width="0.0680%" height="15" fill="rgb(233,210,1)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="98.6674%" y="245" width="0.0680%" height="15" fill="rgb(244,137,37)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="255.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.07%)</title><rect x="98.6674%" y="229" width="0.0680%" height="15" fill="rgb(240,136,2)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="239.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="98.6674%" y="213" width="0.0680%" height="15" fill="rgb(239,18,37)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="223.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.07%)</title><rect x="98.6674%" y="197" width="0.0680%" height="15" fill="rgb(218,185,22)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="207.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="98.6674%" y="181" width="0.0680%" height="15" fill="rgb(225,218,4)" fg:x="7256" fg:w="5"/><text x="98.9174%" y="191.50"></text></g><g><title>regalloc::analysis_control_flow::calc_loop_depths (4,670 samples, 63.50%)</title><rect x="35.2597%" y="357" width="63.5029%" height="15" fill="rgb(230,182,32)" fg:x="2593" fg:w="4670"/><text x="35.5097%" y="367.50">regalloc::analysis_control_flow::calc_loop_depths</text></g><g><title>thermal_interrupt (2 samples, 0.03%)</title><rect x="98.7354%" y="341" width="0.0272%" height="15" fill="rgb(242,56,43)" fg:x="7261" fg:w="2"/><text x="98.9854%" y="351.50"></text></g><g><title>smp_thermal_interrupt (2 samples, 0.03%)</title><rect x="98.7354%" y="325" width="0.0272%" height="15" fill="rgb(233,99,24)" fg:x="7261" fg:w="2"/><text x="98.9854%" y="335.50"></text></g><g><title>native_write_msr_safe (2 samples, 0.03%)</title><rect x="98.7354%" y="309" width="0.0272%" height="15" fill="rgb(234,209,42)" fg:x="7261" fg:w="2"/><text x="98.9854%" y="319.50"></text></g><g><title>regalloc::analysis_control_flow::CFGInfo::create (4,671 samples, 63.52%)</title><rect x="35.2597%" y="373" width="63.5165%" height="15" fill="rgb(227,7,12)" fg:x="2593" fg:w="4671"/><text x="35.5097%" y="383.50">regalloc::analysis_control_flow::CFGInfo::create</text></g><g><title>regalloc::analysis_control_flow::calc_preds_and_succs (1 samples, 0.01%)</title><rect x="98.7626%" y="357" width="0.0136%" height="15" fill="rgb(245,203,43)" fg:x="7263" fg:w="1"/><text x="99.0126%" y="367.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="277" width="0.0136%" height="15" fill="rgb(238,205,33)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="287.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="261" width="0.0136%" height="15" fill="rgb(231,56,7)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="271.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="245" width="0.0136%" height="15" fill="rgb(244,186,29)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="255.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="229" width="0.0136%" height="15" fill="rgb(234,111,31)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="239.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="213" width="0.0136%" height="15" fill="rgb(241,149,10)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="223.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="98.8170%" y="197" width="0.0136%" height="15" fill="rgb(249,206,44)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="207.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="98.8170%" y="181" width="0.0136%" height="15" fill="rgb(251,153,30)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="191.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 0.01%)</title><rect x="98.8170%" y="165" width="0.0136%" height="15" fill="rgb(239,152,38)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="175.50"></text></g><g><title>__lru_cache_add (1 samples, 0.01%)</title><rect x="98.8170%" y="149" width="0.0136%" height="15" fill="rgb(249,139,47)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="159.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.01%)</title><rect x="98.8170%" y="133" width="0.0136%" height="15" fill="rgb(244,64,35)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="143.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.01%)</title><rect x="98.8170%" y="117" width="0.0136%" height="15" fill="rgb(216,46,15)" fg:x="7267" fg:w="1"/><text x="99.0670%" y="127.50"></text></g><g><title>regalloc::analysis_data_flow::calc_def_and_use (5 samples, 0.07%)</title><rect x="98.7762%" y="373" width="0.0680%" height="15" fill="rgb(250,74,19)" fg:x="7264" fg:w="5"/><text x="99.0262%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="98.8034%" y="357" width="0.0408%" height="15" fill="rgb(249,42,33)" fg:x="7266" fg:w="3"/><text x="99.0534%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="98.8034%" y="341" width="0.0408%" height="15" fill="rgb(242,149,17)" fg:x="7266" fg:w="3"/><text x="99.0534%" y="351.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.04%)</title><rect x="98.8034%" y="325" width="0.0408%" height="15" fill="rgb(244,29,21)" fg:x="7266" fg:w="3"/><text x="99.0534%" y="335.50"></text></g><g><title>_int_realloc (3 samples, 0.04%)</title><rect x="98.8034%" y="309" width="0.0408%" height="15" fill="rgb(220,130,37)" fg:x="7266" fg:w="3"/><text x="99.0534%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="98.8034%" y="293" width="0.0408%" height="15" fill="rgb(211,67,2)" fg:x="7266" fg:w="3"/><text x="99.0534%" y="303.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="98.8306%" y="277" width="0.0136%" height="15" fill="rgb(235,68,52)" fg:x="7268" fg:w="1"/><text x="99.0806%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.04%)</title><rect x="98.8714%" y="357" width="0.0408%" height="15" fill="rgb(246,142,3)" fg:x="7271" fg:w="3"/><text x="99.1214%" y="367.50"></text></g><g><title>page_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="341" width="0.0272%" height="15" fill="rgb(241,25,7)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="351.50"></text></g><g><title>do_page_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="325" width="0.0272%" height="15" fill="rgb(242,119,39)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="335.50"></text></g><g><title>__do_page_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="309" width="0.0272%" height="15" fill="rgb(241,98,45)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="319.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="293" width="0.0272%" height="15" fill="rgb(254,28,30)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="303.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="277" width="0.0272%" height="15" fill="rgb(241,142,54)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="287.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="98.8850%" y="261" width="0.0272%" height="15" fill="rgb(222,85,15)" fg:x="7272" fg:w="2"/><text x="99.1350%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="98.8986%" y="245" width="0.0136%" height="15" fill="rgb(210,85,47)" fg:x="7273" fg:w="1"/><text x="99.1486%" y="255.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.01%)</title><rect x="98.8986%" y="229" width="0.0136%" height="15" fill="rgb(224,206,25)" fg:x="7273" fg:w="1"/><text x="99.1486%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="98.8986%" y="213" width="0.0136%" height="15" fill="rgb(243,201,19)" fg:x="7273" fg:w="1"/><text x="99.1486%" y="223.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="98.8986%" y="197" width="0.0136%" height="15" fill="rgb(236,59,4)" fg:x="7273" fg:w="1"/><text x="99.1486%" y="207.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="98.8986%" y="181" width="0.0136%" height="15" fill="rgb(254,179,45)" fg:x="7273" fg:w="1"/><text x="99.1486%" y="191.50"></text></g><g><title>regalloc::sparse_set::SparseSetU&lt;A&gt;::equals (1 samples, 0.01%)</title><rect x="98.9122%" y="357" width="0.0136%" height="15" fill="rgb(226,14,10)" fg:x="7274" fg:w="1"/><text x="99.1622%" y="367.50"></text></g><g><title>regalloc::analysis_data_flow::calc_livein_and_liveout (7 samples, 0.10%)</title><rect x="98.8442%" y="373" width="0.0952%" height="15" fill="rgb(244,27,41)" fg:x="7269" fg:w="7"/><text x="99.0942%" y="383.50"></text></g><g><title>regalloc::sparse_set::SparseSetU&lt;A&gt;::union (1 samples, 0.01%)</title><rect x="98.9258%" y="357" width="0.0136%" height="15" fill="rgb(235,35,32)" fg:x="7275" fg:w="1"/><text x="99.1758%" y="367.50"></text></g><g><title>regalloc::analysis_data_flow::get_range_frags (2 samples, 0.03%)</title><rect x="98.9394%" y="373" width="0.0272%" height="15" fill="rgb(218,68,31)" fg:x="7276" fg:w="2"/><text x="99.1894%" y="383.50"></text></g><g><title>regalloc::analysis_data_flow::get_range_frags_for_block (2 samples, 0.03%)</title><rect x="98.9394%" y="357" width="0.0272%" height="15" fill="rgb(207,120,37)" fg:x="7276" fg:w="2"/><text x="99.1894%" y="367.50"></text></g><g><title>regalloc::analysis_main::run_analysis (4,687 samples, 63.73%)</title><rect x="35.2461%" y="389" width="63.7340%" height="15" fill="rgb(227,98,0)" fg:x="2592" fg:w="4687"/><text x="35.4961%" y="399.50">regalloc::analysis_main::run_analysis</text></g><g><title>regalloc::analysis_data_flow::get_sanitized_reg_uses_for_func (1 samples, 0.01%)</title><rect x="98.9665%" y="373" width="0.0136%" height="15" fill="rgb(207,7,3)" fg:x="7278" fg:w="1"/><text x="99.2165%" y="383.50"></text></g><g><title>regalloc::analysis_data_flow::add_san_reg_vecs_for_insn (1 samples, 0.01%)</title><rect x="98.9665%" y="357" width="0.0136%" height="15" fill="rgb(206,98,19)" fg:x="7278" fg:w="1"/><text x="99.2165%" y="367.50"></text></g><g><title>regalloc::analysis_data_flow::add_raw_reg_vecs_for_insn (1 samples, 0.01%)</title><rect x="98.9665%" y="341" width="0.0136%" height="15" fill="rgb(217,5,26)" fg:x="7278" fg:w="1"/><text x="99.2165%" y="351.50"></text></g><g><title>&lt;cranelift_codegen::isa::x64::inst::Inst as cranelift_codegen::machinst::MachInst&gt;::get_regs (1 samples, 0.01%)</title><rect x="98.9665%" y="325" width="0.0136%" height="15" fill="rgb(235,190,38)" fg:x="7278" fg:w="1"/><text x="99.2165%" y="335.50"></text></g><g><title>regalloc::inst_stream::add_spills_reloads_and_moves (2 samples, 0.03%)</title><rect x="98.9801%" y="373" width="0.0272%" height="15" fill="rgb(247,86,24)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="98.9801%" y="357" width="0.0272%" height="15" fill="rgb(205,101,16)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="98.9801%" y="341" width="0.0272%" height="15" fill="rgb(246,168,33)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="351.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.03%)</title><rect x="98.9801%" y="325" width="0.0272%" height="15" fill="rgb(231,114,1)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="335.50"></text></g><g><title>_int_realloc (2 samples, 0.03%)</title><rect x="98.9801%" y="309" width="0.0272%" height="15" fill="rgb(207,184,53)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="98.9801%" y="293" width="0.0272%" height="15" fill="rgb(224,95,51)" fg:x="7279" fg:w="2"/><text x="99.2301%" y="303.50"></text></g><g><title>cranelift_codegen::machinst::compile::compile (4,709 samples, 64.03%)</title><rect x="35.0014%" y="437" width="64.0332%" height="15" fill="rgb(212,188,45)" fg:x="2574" fg:w="4709"/><text x="35.2514%" y="447.50">cranelift_codegen::machinst::compile::compile</text></g><g><title>regalloc::allocate_registers_with_opts (4,693 samples, 63.82%)</title><rect x="35.2189%" y="421" width="63.8156%" height="15" fill="rgb(223,154,38)" fg:x="2590" fg:w="4693"/><text x="35.4689%" y="431.50">regalloc::allocate_registers_with_opts</text></g><g><title>regalloc::bt_main::alloc_main (4,693 samples, 63.82%)</title><rect x="35.2189%" y="405" width="63.8156%" height="15" fill="rgb(251,22,52)" fg:x="2590" fg:w="4693"/><text x="35.4689%" y="415.50">regalloc::bt_main::alloc_main</text></g><g><title>regalloc::inst_stream::edit_inst_stream (4 samples, 0.05%)</title><rect x="98.9801%" y="389" width="0.0544%" height="15" fill="rgb(229,209,22)" fg:x="7279" fg:w="4"/><text x="99.2301%" y="399.50"></text></g><g><title>regalloc::inst_stream::map_vregs_to_rregs (2 samples, 0.03%)</title><rect x="99.0073%" y="373" width="0.0272%" height="15" fill="rgb(234,138,34)" fg:x="7281" fg:w="2"/><text x="99.2573%" y="383.50"></text></g><g><title>regalloc::reg_maps::VrangeRegUsageMapper::merge_overlay (1 samples, 0.01%)</title><rect x="99.0209%" y="357" width="0.0136%" height="15" fill="rgb(212,95,11)" fg:x="7282" fg:w="1"/><text x="99.2709%" y="367.50"></text></g><g><title>cranelift_codegen::machinst::lower::visit_block_succs (1 samples, 0.01%)</title><rect x="99.0345%" y="437" width="0.0136%" height="15" fill="rgb(240,179,47)" fg:x="7283" fg:w="1"/><text x="99.2845%" y="447.50"></text></g><g><title>cranelift_wasm::func_translator::FuncTranslator::translate_body (1 samples, 0.01%)</title><rect x="99.0481%" y="437" width="0.0136%" height="15" fill="rgb(240,163,11)" fg:x="7284" fg:w="1"/><text x="99.2981%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="99.0617%" y="437" width="0.0136%" height="15" fill="rgb(236,37,12)" fg:x="7285" fg:w="1"/><text x="99.3117%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="99.0753%" y="437" width="0.0136%" height="15" fill="rgb(232,164,16)" fg:x="7286" fg:w="1"/><text x="99.3253%" y="447.50"></text></g><g><title>regalloc::bt_main::alloc_main (2 samples, 0.03%)</title><rect x="99.0889%" y="437" width="0.0272%" height="15" fill="rgb(244,205,15)" fg:x="7287" fg:w="2"/><text x="99.3389%" y="447.50"></text></g><g><title>regalloc::analysis_main::run_analysis (2 samples, 0.03%)</title><rect x="99.0889%" y="421" width="0.0272%" height="15" fill="rgb(223,117,47)" fg:x="7287" fg:w="2"/><text x="99.3389%" y="431.50"></text></g><g><title>regalloc::analysis_control_flow::CFGInfo::create (2 samples, 0.03%)</title><rect x="99.0889%" y="405" width="0.0272%" height="15" fill="rgb(244,107,35)" fg:x="7287" fg:w="2"/><text x="99.3389%" y="415.50"></text></g><g><title>regalloc::analysis_control_flow::calc_preord_and_postord (2 samples, 0.03%)</title><rect x="99.0889%" y="389" width="0.0272%" height="15" fill="rgb(205,140,8)" fg:x="7287" fg:w="2"/><text x="99.3389%" y="399.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::insert_from_slice (2 samples, 0.03%)</title><rect x="99.1161%" y="437" width="0.0272%" height="15" fill="rgb(228,84,46)" fg:x="7289" fg:w="2"/><text x="99.3661%" y="447.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="99.1433%" y="437" width="0.0136%" height="15" fill="rgb(254,188,9)" fg:x="7291" fg:w="1"/><text x="99.3933%" y="447.50"></text></g><g><title>std::fs::write::inner (1 samples, 0.01%)</title><rect x="99.1569%" y="405" width="0.0136%" height="15" fill="rgb(206,112,54)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.01%)</title><rect x="99.1569%" y="389" width="0.0136%" height="15" fill="rgb(216,84,49)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.01%)</title><rect x="99.1569%" y="373" width="0.0136%" height="15" fill="rgb(214,194,35)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.01%)</title><rect x="99.1569%" y="357" width="0.0136%" height="15" fill="rgb(249,28,3)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.01%)</title><rect x="99.1569%" y="341" width="0.0136%" height="15" fill="rgb(222,56,52)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="351.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.1569%" y="325" width="0.0136%" height="15" fill="rgb(245,217,50)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="335.50"></text></g><g><title>__close (1 samples, 0.01%)</title><rect x="99.1569%" y="309" width="0.0136%" height="15" fill="rgb(213,201,24)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.1569%" y="293" width="0.0136%" height="15" fill="rgb(248,116,28)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="303.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.1569%" y="277" width="0.0136%" height="15" fill="rgb(219,72,43)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="287.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 0.01%)</title><rect x="99.1569%" y="261" width="0.0136%" height="15" fill="rgb(209,138,14)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="271.50"></text></g><g><title>task_work_run (1 samples, 0.01%)</title><rect x="99.1569%" y="245" width="0.0136%" height="15" fill="rgb(222,18,33)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="255.50"></text></g><g><title>____fput (1 samples, 0.01%)</title><rect x="99.1569%" y="229" width="0.0136%" height="15" fill="rgb(213,199,7)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="239.50"></text></g><g><title>__fput (1 samples, 0.01%)</title><rect x="99.1569%" y="213" width="0.0136%" height="15" fill="rgb(250,110,10)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="223.50"></text></g><g><title>ext4_release_file (1 samples, 0.01%)</title><rect x="99.1569%" y="197" width="0.0136%" height="15" fill="rgb(248,123,6)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="207.50"></text></g><g><title>ext4_alloc_da_blocks (1 samples, 0.01%)</title><rect x="99.1569%" y="181" width="0.0136%" height="15" fill="rgb(206,91,31)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="191.50"></text></g><g><title>filemap_flush (1 samples, 0.01%)</title><rect x="99.1569%" y="165" width="0.0136%" height="15" fill="rgb(211,154,13)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="175.50"></text></g><g><title>__filemap_fdatawrite_range (1 samples, 0.01%)</title><rect x="99.1569%" y="149" width="0.0136%" height="15" fill="rgb(225,148,7)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="159.50"></text></g><g><title>do_writepages (1 samples, 0.01%)</title><rect x="99.1569%" y="133" width="0.0136%" height="15" fill="rgb(220,160,43)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="143.50"></text></g><g><title>ext4_writepages (1 samples, 0.01%)</title><rect x="99.1569%" y="117" width="0.0136%" height="15" fill="rgb(213,52,39)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="127.50"></text></g><g><title>mpage_map_and_submit_extent (1 samples, 0.01%)</title><rect x="99.1569%" y="101" width="0.0136%" height="15" fill="rgb(243,137,7)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="111.50"></text></g><g><title>ext4_map_blocks (1 samples, 0.01%)</title><rect x="99.1569%" y="85" width="0.0136%" height="15" fill="rgb(230,79,13)" fg:x="7292" fg:w="1"/><text x="99.4069%" y="95.50"></text></g><g><title>__GI_munmap (1 samples, 0.01%)</title><rect x="99.1705%" y="341" width="0.0136%" height="15" fill="rgb(247,105,23)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.1705%" y="325" width="0.0136%" height="15" fill="rgb(223,179,41)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="335.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.1705%" y="309" width="0.0136%" height="15" fill="rgb(218,9,34)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="319.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.01%)</title><rect x="99.1705%" y="293" width="0.0136%" height="15" fill="rgb(222,106,8)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="303.50"></text></g><g><title>__vm_munmap (1 samples, 0.01%)</title><rect x="99.1705%" y="277" width="0.0136%" height="15" fill="rgb(211,220,0)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="287.50"></text></g><g><title>__do_munmap (1 samples, 0.01%)</title><rect x="99.1705%" y="261" width="0.0136%" height="15" fill="rgb(229,52,16)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="271.50"></text></g><g><title>unmap_region (1 samples, 0.01%)</title><rect x="99.1705%" y="245" width="0.0136%" height="15" fill="rgb(212,155,18)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="255.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.01%)</title><rect x="99.1705%" y="229" width="0.0136%" height="15" fill="rgb(242,21,14)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="239.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="99.1705%" y="213" width="0.0136%" height="15" fill="rgb(222,19,48)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="99.1705%" y="197" width="0.0136%" height="15" fill="rgb(232,45,27)" fg:x="7293" fg:w="1"/><text x="99.4205%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;wast::ast::module::ModuleField&gt; (2 samples, 0.03%)</title><rect x="99.1705%" y="357" width="0.0272%" height="15" fill="rgb(249,103,42)" fg:x="7293" fg:w="2"/><text x="99.4205%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wast::ast::types::TypeUse&lt;wast::ast::types::FunctionType&gt;&gt; (1 samples, 0.01%)</title><rect x="99.1841%" y="341" width="0.0136%" height="15" fill="rgb(246,81,33)" fg:x="7294" fg:w="1"/><text x="99.4341%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wast::parser::ParseBuffer&gt; (1 samples, 0.01%)</title><rect x="99.1977%" y="357" width="0.0136%" height="15" fill="rgb(252,33,42)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="367.50"></text></g><g><title>__GI_munmap (1 samples, 0.01%)</title><rect x="99.1977%" y="341" width="0.0136%" height="15" fill="rgb(209,212,41)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.1977%" y="325" width="0.0136%" height="15" fill="rgb(207,154,6)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="335.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.1977%" y="309" width="0.0136%" height="15" fill="rgb(223,64,47)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="319.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.01%)</title><rect x="99.1977%" y="293" width="0.0136%" height="15" fill="rgb(211,161,38)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="303.50"></text></g><g><title>__vm_munmap (1 samples, 0.01%)</title><rect x="99.1977%" y="277" width="0.0136%" height="15" fill="rgb(219,138,40)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="287.50"></text></g><g><title>__do_munmap (1 samples, 0.01%)</title><rect x="99.1977%" y="261" width="0.0136%" height="15" fill="rgb(241,228,46)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="271.50"></text></g><g><title>unmap_region (1 samples, 0.01%)</title><rect x="99.1977%" y="245" width="0.0136%" height="15" fill="rgb(223,209,38)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="255.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.01%)</title><rect x="99.1977%" y="229" width="0.0136%" height="15" fill="rgb(236,164,45)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="239.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="99.1977%" y="213" width="0.0136%" height="15" fill="rgb(231,15,5)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="99.1977%" y="197" width="0.0136%" height="15" fill="rgb(252,35,15)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="207.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="99.1977%" y="181" width="0.0136%" height="15" fill="rgb(248,181,18)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="191.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.01%)</title><rect x="99.1977%" y="165" width="0.0136%" height="15" fill="rgb(233,39,42)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="175.50"></text></g><g><title>uncharge_page (1 samples, 0.01%)</title><rect x="99.1977%" y="149" width="0.0136%" height="15" fill="rgb(238,110,33)" fg:x="7295" fg:w="1"/><text x="99.4477%" y="159.50"></text></g><g><title>wast::binary::encode_fields (3 samples, 0.04%)</title><rect x="99.2113%" y="341" width="0.0408%" height="15" fill="rgb(233,195,10)" fg:x="7296" fg:w="3"/><text x="99.4613%" y="351.50"></text></g><g><title>&lt;wast::ast::func::Func as wast::binary::Encode&gt;::encode (1 samples, 0.01%)</title><rect x="99.2385%" y="325" width="0.0136%" height="15" fill="rgb(254,105,3)" fg:x="7298" fg:w="1"/><text x="99.4885%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="99.2385%" y="309" width="0.0136%" height="15" fill="rgb(221,225,9)" fg:x="7298" fg:w="1"/><text x="99.4885%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="99.2385%" y="293" width="0.0136%" height="15" fill="rgb(224,227,45)" fg:x="7298" fg:w="1"/><text x="99.4885%" y="303.50"></text></g><g><title>wast::resolve::aliases::run (1 samples, 0.01%)</title><rect x="99.2521%" y="325" width="0.0136%" height="15" fill="rgb(229,198,43)" fg:x="7299" fg:w="1"/><text x="99.5021%" y="335.50"></text></g><g><title>wast::resolve::aliases::Expander::expand_expr (1 samples, 0.01%)</title><rect x="99.2521%" y="309" width="0.0136%" height="15" fill="rgb(206,209,35)" fg:x="7299" fg:w="1"/><text x="99.5021%" y="319.50"></text></g><g><title>wast::ast::expr::Instruction::memarg_mut (1 samples, 0.01%)</title><rect x="99.2521%" y="293" width="0.0136%" height="15" fill="rgb(245,195,53)" fg:x="7299" fg:w="1"/><text x="99.5021%" y="303.50"></text></g><g><title>wast::ast::module::Module::encode (6 samples, 0.08%)</title><rect x="99.2113%" y="357" width="0.0816%" height="15" fill="rgb(240,92,26)" fg:x="7296" fg:w="6"/><text x="99.4613%" y="367.50"></text></g><g><title>wast::resolve::resolve (3 samples, 0.04%)</title><rect x="99.2521%" y="341" width="0.0408%" height="15" fill="rgb(207,40,23)" fg:x="7299" fg:w="3"/><text x="99.5021%" y="351.50"></text></g><g><title>wast::resolve::names::resolve (2 samples, 0.03%)</title><rect x="99.2657%" y="325" width="0.0272%" height="15" fill="rgb(223,111,35)" fg:x="7300" fg:w="2"/><text x="99.5157%" y="335.50"></text></g><g><title>wast::resolve::names::Resolver::process (2 samples, 0.03%)</title><rect x="99.2657%" y="309" width="0.0272%" height="15" fill="rgb(229,147,28)" fg:x="7300" fg:w="2"/><text x="99.5157%" y="319.50"></text></g><g><title>wast::resolve::names::ExprResolver::resolve (2 samples, 0.03%)</title><rect x="99.2657%" y="293" width="0.0272%" height="15" fill="rgb(211,29,28)" fg:x="7300" fg:w="2"/><text x="99.5157%" y="303.50"></text></g><g><title>wast::resolve::names::ExprResolver::resolve_block_type (1 samples, 0.01%)</title><rect x="99.2793%" y="277" width="0.0136%" height="15" fill="rgb(228,72,33)" fg:x="7301" fg:w="1"/><text x="99.5293%" y="287.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="341" width="0.0136%" height="15" fill="rgb(205,214,31)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="351.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="325" width="0.0136%" height="15" fill="rgb(224,111,15)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="335.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="309" width="0.0136%" height="15" fill="rgb(253,21,26)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="319.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="293" width="0.0136%" height="15" fill="rgb(245,139,43)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="303.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="277" width="0.0136%" height="15" fill="rgb(252,170,7)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="287.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="99.2929%" y="261" width="0.0136%" height="15" fill="rgb(231,118,14)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="99.2929%" y="245" width="0.0136%" height="15" fill="rgb(238,83,0)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="255.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.01%)</title><rect x="99.2929%" y="229" width="0.0136%" height="15" fill="rgb(221,39,39)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="99.2929%" y="213" width="0.0136%" height="15" fill="rgb(222,119,46)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="223.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="99.2929%" y="197" width="0.0136%" height="15" fill="rgb(222,165,49)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="207.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="99.2929%" y="181" width="0.0136%" height="15" fill="rgb(219,113,52)" fg:x="7302" fg:w="1"/><text x="99.5429%" y="191.50"></text></g><g><title>wast::parser::ParseBuffer::new (2 samples, 0.03%)</title><rect x="99.2929%" y="357" width="0.0272%" height="15" fill="rgb(214,7,15)" fg:x="7302" fg:w="2"/><text x="99.5429%" y="367.50"></text></g><g><title>wast::lexer::Lexer::parse (1 samples, 0.01%)</title><rect x="99.3065%" y="341" width="0.0136%" height="15" fill="rgb(235,32,4)" fg:x="7303" fg:w="1"/><text x="99.5565%" y="351.50"></text></g><g><title>wast::lexer::is_idchar (1 samples, 0.01%)</title><rect x="99.3065%" y="325" width="0.0136%" height="15" fill="rgb(238,90,54)" fg:x="7303" fg:w="1"/><text x="99.5565%" y="335.50"></text></g><g><title>wast::ast::token::&lt;impl wast::parser::Parse for core::option::Option&lt;wast::ast::token::NameAnnotation&gt;&gt;::parse (2 samples, 0.03%)</title><rect x="99.3201%" y="181" width="0.0272%" height="15" fill="rgb(213,208,19)" fg:x="7304" fg:w="2"/><text x="99.5701%" y="191.50"></text></g><g><title>wast::parser::Parser::register_annotation (2 samples, 0.03%)</title><rect x="99.3201%" y="165" width="0.0272%" height="15" fill="rgb(233,156,4)" fg:x="7304" fg:w="2"/><text x="99.5701%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="99.3337%" y="149" width="0.0136%" height="15" fill="rgb(207,194,5)" fg:x="7305" fg:w="1"/><text x="99.5837%" y="159.50"></text></g><g><title>&lt;wast::ast::expr::Instruction as wast::parser::Parse&gt;::parse::Loop (3 samples, 0.04%)</title><rect x="99.3201%" y="213" width="0.0408%" height="15" fill="rgb(206,111,30)" fg:x="7304" fg:w="3"/><text x="99.5701%" y="223.50"></text></g><g><title>&lt;wast::ast::expr::BlockType as wast::parser::Parse&gt;::parse (3 samples, 0.04%)</title><rect x="99.3201%" y="197" width="0.0408%" height="15" fill="rgb(243,70,54)" fg:x="7304" fg:w="3"/><text x="99.5701%" y="207.50"></text></g><g><title>wast::parser::Cursor::advance_token (1 samples, 0.01%)</title><rect x="99.3473%" y="181" width="0.0136%" height="15" fill="rgb(242,28,8)" fg:x="7306" fg:w="1"/><text x="99.5973%" y="191.50"></text></g><g><title>&lt;wast::ast::expr::Instruction as wast::parser::Parse&gt;::parse::_{{closure}} (1 samples, 0.01%)</title><rect x="99.3609%" y="213" width="0.0136%" height="15" fill="rgb(219,106,18)" fg:x="7307" fg:w="1"/><text x="99.6109%" y="223.50"></text></g><g><title>page_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="197" width="0.0136%" height="15" fill="rgb(244,222,10)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="207.50"></text></g><g><title>do_page_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="181" width="0.0136%" height="15" fill="rgb(236,179,52)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="191.50"></text></g><g><title>__do_page_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="165" width="0.0136%" height="15" fill="rgb(213,23,39)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="175.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="149" width="0.0136%" height="15" fill="rgb(238,48,10)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="159.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="133" width="0.0136%" height="15" fill="rgb(251,196,23)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="143.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="99.3881%" y="117" width="0.0136%" height="15" fill="rgb(250,152,24)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="99.3881%" y="101" width="0.0136%" height="15" fill="rgb(209,150,17)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="111.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.01%)</title><rect x="99.3881%" y="85" width="0.0136%" height="15" fill="rgb(234,202,34)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="95.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.01%)</title><rect x="99.3881%" y="69" width="0.0136%" height="15" fill="rgb(253,148,53)" fg:x="7309" fg:w="1"/><text x="99.6381%" y="79.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="99.3745%" y="213" width="0.0408%" height="15" fill="rgb(218,129,16)" fg:x="7308" fg:w="3"/><text x="99.6245%" y="223.50"></text></g><g><title>sync_regs (1 samples, 0.01%)</title><rect x="99.4017%" y="197" width="0.0136%" height="15" fill="rgb(216,85,19)" fg:x="7310" fg:w="1"/><text x="99.6517%" y="207.50"></text></g><g><title>[unknown] (7,296 samples, 99.21%)</title><rect x="0.2312%" y="453" width="99.2113%" height="15" fill="rgb(235,228,7)" fg:x="17" fg:w="7296"/><text x="0.4812%" y="463.50">[unknown]</text></g><g><title>wasmtime::main (21 samples, 0.29%)</title><rect x="99.1569%" y="437" width="0.2856%" height="15" fill="rgb(245,175,0)" fg:x="7292" fg:w="21"/><text x="99.4069%" y="447.50"></text></g><g><title>wasmtime_cli::commands::compile::CompileCommand::execute (21 samples, 0.29%)</title><rect x="99.1569%" y="421" width="0.2856%" height="15" fill="rgb(208,168,36)" fg:x="7292" fg:w="21"/><text x="99.4069%" y="431.50"></text></g><g><title>wasmtime::engine::Engine::precompile_module (20 samples, 0.27%)</title><rect x="99.1705%" y="405" width="0.2720%" height="15" fill="rgb(246,171,24)" fg:x="7293" fg:w="20"/><text x="99.4205%" y="415.50"></text></g><g><title>wat::parse_bytes (20 samples, 0.27%)</title><rect x="99.1705%" y="389" width="0.2720%" height="15" fill="rgb(215,142,24)" fg:x="7293" fg:w="20"/><text x="99.4205%" y="399.50"></text></g><g><title>wat::_parse_str (20 samples, 0.27%)</title><rect x="99.1705%" y="373" width="0.2720%" height="15" fill="rgb(250,187,7)" fg:x="7293" fg:w="20"/><text x="99.4205%" y="383.50"></text></g><g><title>wast::parser::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="357" width="0.1224%" height="15" fill="rgb(228,66,33)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="367.50"></text></g><g><title>&lt;wast::ast::module::Wat as wast::parser::Parse&gt;::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="341" width="0.1224%" height="15" fill="rgb(234,215,21)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="351.50"></text></g><g><title>wast::parser::Parser::parens (9 samples, 0.12%)</title><rect x="99.3201%" y="325" width="0.1224%" height="15" fill="rgb(222,191,20)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="335.50"></text></g><g><title>&lt;wast::ast::module::Module as wast::parser::Parse&gt;::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="309" width="0.1224%" height="15" fill="rgb(245,79,54)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="319.50"></text></g><g><title>wast::ast::module::ModuleField::parse_remaining (9 samples, 0.12%)</title><rect x="99.3201%" y="293" width="0.1224%" height="15" fill="rgb(240,10,37)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="303.50"></text></g><g><title>wast::parser::Parser::parens (9 samples, 0.12%)</title><rect x="99.3201%" y="277" width="0.1224%" height="15" fill="rgb(214,192,32)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="287.50"></text></g><g><title>&lt;wast::ast::module::ModuleField as wast::parser::Parse&gt;::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="261" width="0.1224%" height="15" fill="rgb(209,36,54)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="271.50"></text></g><g><title>&lt;wast::ast::func::Func as wast::parser::Parse&gt;::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="245" width="0.1224%" height="15" fill="rgb(220,10,11)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="255.50"></text></g><g><title>&lt;wast::ast::expr::Expression as wast::parser::Parse&gt;::parse (9 samples, 0.12%)</title><rect x="99.3201%" y="229" width="0.1224%" height="15" fill="rgb(221,106,17)" fg:x="7304" fg:w="9"/><text x="99.5701%" y="239.50"></text></g><g><title>wast::parser::Cursor::advance_token (2 samples, 0.03%)</title><rect x="99.4153%" y="213" width="0.0272%" height="15" fill="rgb(251,142,44)" fg:x="7311" fg:w="2"/><text x="99.6653%" y="223.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.01%)</title><rect x="99.4425%" y="325" width="0.0136%" height="15" fill="rgb(238,13,15)" fg:x="7313" fg:w="1"/><text x="99.6925%" y="335.50"></text></g><g><title>ret_from_fork (15 samples, 0.20%)</title><rect x="99.4425%" y="437" width="0.2040%" height="15" fill="rgb(208,107,27)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="447.50"></text></g><g><title>schedule_tail (15 samples, 0.20%)</title><rect x="99.4425%" y="421" width="0.2040%" height="15" fill="rgb(205,136,37)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="431.50"></text></g><g><title>finish_task_switch (15 samples, 0.20%)</title><rect x="99.4425%" y="405" width="0.2040%" height="15" fill="rgb(250,205,27)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.20%)</title><rect x="99.4425%" y="389" width="0.2040%" height="15" fill="rgb(210,80,43)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="399.50"></text></g><g><title>perf_pmu_enable.part.0 (15 samples, 0.20%)</title><rect x="99.4425%" y="373" width="0.2040%" height="15" fill="rgb(247,160,36)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="383.50"></text></g><g><title>x86_pmu_enable (15 samples, 0.20%)</title><rect x="99.4425%" y="357" width="0.2040%" height="15" fill="rgb(234,13,49)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="367.50"></text></g><g><title>intel_tfa_pmu_enable_all (15 samples, 0.20%)</title><rect x="99.4425%" y="341" width="0.2040%" height="15" fill="rgb(234,122,0)" fg:x="7313" fg:w="15"/><text x="99.6925%" y="351.50"></text></g><g><title>native_write_msr (14 samples, 0.19%)</title><rect x="99.4561%" y="325" width="0.1904%" height="15" fill="rgb(207,146,38)" fg:x="7314" fg:w="14"/><text x="99.7061%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.6600%" y="421" width="0.0136%" height="15" fill="rgb(207,177,25)" fg:x="7329" fg:w="1"/><text x="99.9100%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.6600%" y="405" width="0.0136%" height="15" fill="rgb(211,178,42)" fg:x="7329" fg:w="1"/><text x="99.9100%" y="415.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="99.6736%" y="357" width="0.0136%" height="15" fill="rgb(230,69,54)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="367.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.01%)</title><rect x="99.6736%" y="341" width="0.0136%" height="15" fill="rgb(214,135,41)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="99.6736%" y="325" width="0.0136%" height="15" fill="rgb(237,67,25)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="335.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="99.6736%" y="309" width="0.0136%" height="15" fill="rgb(222,189,50)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="319.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="99.6736%" y="293" width="0.0136%" height="15" fill="rgb(245,148,34)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="303.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="99.6736%" y="277" width="0.0136%" height="15" fill="rgb(222,29,6)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="287.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="99.6736%" y="261" width="0.0136%" height="15" fill="rgb(221,189,43)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="271.50"></text></g><g><title>_int_new_arena (1 samples, 0.01%)</title><rect x="99.6736%" y="245" width="0.0136%" height="15" fill="rgb(207,36,27)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="255.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="99.6736%" y="229" width="0.0136%" height="15" fill="rgb(217,90,24)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="239.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="99.6736%" y="213" width="0.0136%" height="15" fill="rgb(224,66,35)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.6736%" y="197" width="0.0136%" height="15" fill="rgb(221,13,50)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="207.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.6736%" y="181" width="0.0136%" height="15" fill="rgb(236,68,49)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="191.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.01%)</title><rect x="99.6736%" y="165" width="0.0136%" height="15" fill="rgb(229,146,28)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="175.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.01%)</title><rect x="99.6736%" y="149" width="0.0136%" height="15" fill="rgb(225,31,38)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="159.50"></text></g><g><title>find_vma (1 samples, 0.01%)</title><rect x="99.6736%" y="133" width="0.0136%" height="15" fill="rgb(250,208,3)" fg:x="7330" fg:w="1"/><text x="99.9236%" y="143.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="99.6872%" y="309" width="0.0136%" height="15" fill="rgb(246,54,23)" fg:x="7331" fg:w="1"/><text x="99.9372%" y="319.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="99.6872%" y="293" width="0.0136%" height="15" fill="rgb(243,76,11)" fg:x="7331" fg:w="1"/><text x="99.9372%" y="303.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="99.7008%" y="181" width="0.0136%" height="15" fill="rgb(245,21,50)" fg:x="7332" fg:w="1"/><text x="99.9508%" y="191.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.11%)</title><rect x="99.6736%" y="405" width="0.1088%" height="15" fill="rgb(228,9,43)" fg:x="7330" fg:w="8"/><text x="99.9236%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.11%)</title><rect x="99.6736%" y="389" width="0.1088%" height="15" fill="rgb(208,100,47)" fg:x="7330" fg:w="8"/><text x="99.9236%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8 samples, 0.11%)</title><rect x="99.6736%" y="373" width="0.1088%" height="15" fill="rgb(232,26,8)" fg:x="7330" fg:w="8"/><text x="99.9236%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.10%)</title><rect x="99.6872%" y="357" width="0.0952%" height="15" fill="rgb(216,166,38)" fg:x="7331" fg:w="7"/><text x="99.9372%" y="367.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (7 samples, 0.10%)</title><rect x="99.6872%" y="341" width="0.0952%" height="15" fill="rgb(251,202,51)" fg:x="7331" fg:w="7"/><text x="99.9372%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 0.10%)</title><rect x="99.6872%" y="325" width="0.0952%" height="15" fill="rgb(254,216,34)" fg:x="7331" fg:w="7"/><text x="99.9372%" y="335.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6 samples, 0.08%)</title><rect x="99.7008%" y="309" width="0.0816%" height="15" fill="rgb(251,32,27)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="319.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.08%)</title><rect x="99.7008%" y="293" width="0.0816%" height="15" fill="rgb(208,127,28)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="303.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.08%)</title><rect x="99.7008%" y="277" width="0.0816%" height="15" fill="rgb(224,137,22)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="287.50"></text></g><g><title>futex_wait_cancelable (6 samples, 0.08%)</title><rect x="99.7008%" y="261" width="0.0816%" height="15" fill="rgb(254,70,32)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="99.7008%" y="245" width="0.0816%" height="15" fill="rgb(229,75,37)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="255.50"></text></g><g><title>do_syscall_64 (6 samples, 0.08%)</title><rect x="99.7008%" y="229" width="0.0816%" height="15" fill="rgb(252,64,23)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="239.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.08%)</title><rect x="99.7008%" y="213" width="0.0816%" height="15" fill="rgb(232,162,48)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="223.50"></text></g><g><title>do_futex (6 samples, 0.08%)</title><rect x="99.7008%" y="197" width="0.0816%" height="15" fill="rgb(246,160,12)" fg:x="7332" fg:w="6"/><text x="99.9508%" y="207.50"></text></g><g><title>futex_wait (5 samples, 0.07%)</title><rect x="99.7144%" y="181" width="0.0680%" height="15" fill="rgb(247,166,0)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="191.50"></text></g><g><title>futex_wait_queue_me (5 samples, 0.07%)</title><rect x="99.7144%" y="165" width="0.0680%" height="15" fill="rgb(249,219,21)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="175.50"></text></g><g><title>schedule (5 samples, 0.07%)</title><rect x="99.7144%" y="149" width="0.0680%" height="15" fill="rgb(205,209,3)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="159.50"></text></g><g><title>__sched_text_start (5 samples, 0.07%)</title><rect x="99.7144%" y="133" width="0.0680%" height="15" fill="rgb(243,44,1)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="143.50"></text></g><g><title>finish_task_switch (5 samples, 0.07%)</title><rect x="99.7144%" y="117" width="0.0680%" height="15" fill="rgb(206,159,16)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="99.7144%" y="101" width="0.0680%" height="15" fill="rgb(244,77,30)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="111.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.07%)</title><rect x="99.7144%" y="85" width="0.0680%" height="15" fill="rgb(218,69,12)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="95.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="99.7144%" y="69" width="0.0680%" height="15" fill="rgb(212,87,7)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="79.50"></text></g><g><title>intel_tfa_pmu_enable_all (5 samples, 0.07%)</title><rect x="99.7144%" y="53" width="0.0680%" height="15" fill="rgb(245,114,25)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="63.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="99.7144%" y="37" width="0.0680%" height="15" fill="rgb(210,61,42)" fg:x="7333" fg:w="5"/><text x="99.9644%" y="47.50"></text></g><g><title>__GI___clone (26 samples, 0.35%)</title><rect x="99.4425%" y="453" width="0.3535%" height="15" fill="rgb(211,52,33)" fg:x="7313" fg:w="26"/><text x="99.6925%" y="463.50"></text></g><g><title>start_thread (11 samples, 0.15%)</title><rect x="99.6465%" y="437" width="0.1496%" height="15" fill="rgb(234,58,33)" fg:x="7328" fg:w="11"/><text x="99.8965%" y="447.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.12%)</title><rect x="99.6736%" y="421" width="0.1224%" height="15" fill="rgb(220,115,36)" fg:x="7330" fg:w="9"/><text x="99.9236%" y="431.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.01%)</title><rect x="99.7824%" y="405" width="0.0136%" height="15" fill="rgb(243,153,54)" fg:x="7338" fg:w="1"/><text x="100.0324%" y="415.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.01%)</title><rect x="99.7824%" y="389" width="0.0136%" height="15" fill="rgb(251,47,18)" fg:x="7338" fg:w="1"/><text x="100.0324%" y="399.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="99.7824%" y="373" width="0.0136%" height="15" fill="rgb(242,102,42)" fg:x="7338" fg:w="1"/><text x="100.0324%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="99.7824%" y="357" width="0.0136%" height="15" fill="rgb(234,31,38)" fg:x="7338" fg:w="1"/><text x="100.0324%" y="367.50"></text></g><g><title>_start (1 samples, 0.01%)</title><rect x="99.7960%" y="453" width="0.0136%" height="15" fill="rgb(221,117,51)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="463.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.7960%" y="437" width="0.0136%" height="15" fill="rgb(212,20,18)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="447.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.7960%" y="421" width="0.0136%" height="15" fill="rgb(245,133,36)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="431.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.7960%" y="405" width="0.0136%" height="15" fill="rgb(212,6,19)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="415.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.7960%" y="389" width="0.0136%" height="15" fill="rgb(218,1,36)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="399.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="99.7960%" y="373" width="0.0136%" height="15" fill="rgb(246,84,54)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="383.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="99.7960%" y="357" width="0.0136%" height="15" fill="rgb(242,110,6)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="367.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="99.7960%" y="341" width="0.0136%" height="15" fill="rgb(214,47,5)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="351.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="99.7960%" y="325" width="0.0136%" height="15" fill="rgb(218,159,25)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="335.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="99.7960%" y="309" width="0.0136%" height="15" fill="rgb(215,211,28)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="319.50"></text></g><g><title>_dl_map_segments (1 samples, 0.01%)</title><rect x="99.7960%" y="293" width="0.0136%" height="15" fill="rgb(238,59,32)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="303.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.7960%" y="277" width="0.0136%" height="15" fill="rgb(226,82,3)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="287.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.7960%" y="261" width="0.0136%" height="15" fill="rgb(240,164,32)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="99.7960%" y="245" width="0.0136%" height="15" fill="rgb(232,46,7)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="255.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="99.7960%" y="229" width="0.0136%" height="15" fill="rgb(229,129,53)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="239.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.01%)</title><rect x="99.7960%" y="213" width="0.0136%" height="15" fill="rgb(234,188,29)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="223.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.01%)</title><rect x="99.7960%" y="197" width="0.0136%" height="15" fill="rgb(246,141,4)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="207.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.01%)</title><rect x="99.7960%" y="181" width="0.0136%" height="15" fill="rgb(229,23,39)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="191.50"></text></g><g><title>do_mmap (1 samples, 0.01%)</title><rect x="99.7960%" y="165" width="0.0136%" height="15" fill="rgb(206,12,3)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="175.50"></text></g><g><title>mmap_region (1 samples, 0.01%)</title><rect x="99.7960%" y="149" width="0.0136%" height="15" fill="rgb(252,226,20)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="159.50"></text></g><g><title>__do_munmap (1 samples, 0.01%)</title><rect x="99.7960%" y="133" width="0.0136%" height="15" fill="rgb(216,123,35)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="143.50"></text></g><g><title>__split_vma (1 samples, 0.01%)</title><rect x="99.7960%" y="117" width="0.0136%" height="15" fill="rgb(212,68,40)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="127.50"></text></g><g><title>__vma_adjust (1 samples, 0.01%)</title><rect x="99.7960%" y="101" width="0.0136%" height="15" fill="rgb(254,125,32)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="111.50"></text></g><g><title>__vma_link_rb (1 samples, 0.01%)</title><rect x="99.7960%" y="85" width="0.0136%" height="15" fill="rgb(253,97,22)" fg:x="7339" fg:w="1"/><text x="100.0460%" y="95.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="99.8096%" y="453" width="0.0136%" height="15" fill="rgb(241,101,14)" fg:x="7340" fg:w="1"/><text x="100.0596%" y="463.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::last_dominator (1 samples, 0.01%)</title><rect x="99.8232%" y="453" width="0.0136%" height="15" fill="rgb(238,103,29)" fg:x="7341" fg:w="1"/><text x="100.0732%" y="463.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.01%)</title><rect x="99.8368%" y="421" width="0.0136%" height="15" fill="rgb(233,195,47)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="431.50"></text></g><g><title>__do_execve_file.isra.0 (1 samples, 0.01%)</title><rect x="99.8368%" y="405" width="0.0136%" height="15" fill="rgb(246,218,30)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="415.50"></text></g><g><title>search_binary_handler (1 samples, 0.01%)</title><rect x="99.8368%" y="389" width="0.0136%" height="15" fill="rgb(219,145,47)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="399.50"></text></g><g><title>load_elf_binary (1 samples, 0.01%)</title><rect x="99.8368%" y="373" width="0.0136%" height="15" fill="rgb(243,12,26)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="383.50"></text></g><g><title>setup_arg_pages (1 samples, 0.01%)</title><rect x="99.8368%" y="357" width="0.0136%" height="15" fill="rgb(214,87,16)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="367.50"></text></g><g><title>shift_arg_pages (1 samples, 0.01%)</title><rect x="99.8368%" y="341" width="0.0136%" height="15" fill="rgb(208,99,42)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="351.50"></text></g><g><title>move_page_tables (1 samples, 0.01%)</title><rect x="99.8368%" y="325" width="0.0136%" height="15" fill="rgb(253,99,2)" fg:x="7342" fg:w="1"/><text x="100.0868%" y="335.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.01%)</title><rect x="99.8504%" y="309" width="0.0136%" height="15" fill="rgb(220,168,23)" fg:x="7343" fg:w="1"/><text x="100.1004%" y="319.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="99.8504%" y="293" width="0.0136%" height="15" fill="rgb(242,38,24)" fg:x="7343" fg:w="1"/><text x="100.1004%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="99.8504%" y="277" width="0.0136%" height="15" fill="rgb(225,182,9)" fg:x="7343" fg:w="1"/><text x="100.1004%" y="287.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="99.8504%" y="261" width="0.0136%" height="15" fill="rgb(243,178,37)" fg:x="7343" fg:w="1"/><text x="100.1004%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="99.8368%" y="453" width="0.0408%" height="15" fill="rgb(232,139,19)" fg:x="7342" fg:w="3"/><text x="100.0868%" y="463.50"></text></g><g><title>do_syscall_64 (3 samples, 0.04%)</title><rect x="99.8368%" y="437" width="0.0408%" height="15" fill="rgb(225,201,24)" fg:x="7342" fg:w="3"/><text x="100.0868%" y="447.50"></text></g><g><title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="99.8504%" y="421" width="0.0272%" height="15" fill="rgb(221,47,46)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="431.50"></text></g><g><title>do_signal (2 samples, 0.03%)</title><rect x="99.8504%" y="405" width="0.0272%" height="15" fill="rgb(249,23,13)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="415.50"></text></g><g><title>get_signal (2 samples, 0.03%)</title><rect x="99.8504%" y="389" width="0.0272%" height="15" fill="rgb(219,9,5)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="399.50"></text></g><g><title>do_group_exit (2 samples, 0.03%)</title><rect x="99.8504%" y="373" width="0.0272%" height="15" fill="rgb(254,171,16)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="383.50"></text></g><g><title>do_exit (2 samples, 0.03%)</title><rect x="99.8504%" y="357" width="0.0272%" height="15" fill="rgb(230,171,20)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="367.50"></text></g><g><title>mmput (2 samples, 0.03%)</title><rect x="99.8504%" y="341" width="0.0272%" height="15" fill="rgb(210,71,41)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="351.50"></text></g><g><title>exit_mmap (2 samples, 0.03%)</title><rect x="99.8504%" y="325" width="0.0272%" height="15" fill="rgb(206,173,20)" fg:x="7343" fg:w="2"/><text x="100.1004%" y="335.50"></text></g><g><title>unmap_vmas (1 samples, 0.01%)</title><rect x="99.8640%" y="309" width="0.0136%" height="15" fill="rgb(233,88,34)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="319.50"></text></g><g><title>unmap_single_vma (1 samples, 0.01%)</title><rect x="99.8640%" y="293" width="0.0136%" height="15" fill="rgb(223,209,46)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="303.50"></text></g><g><title>unmap_page_range (1 samples, 0.01%)</title><rect x="99.8640%" y="277" width="0.0136%" height="15" fill="rgb(250,43,18)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="287.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.01%)</title><rect x="99.8640%" y="261" width="0.0136%" height="15" fill="rgb(208,13,10)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="271.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="99.8640%" y="245" width="0.0136%" height="15" fill="rgb(212,200,36)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="255.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="99.8640%" y="229" width="0.0136%" height="15" fill="rgb(225,90,30)" fg:x="7344" fg:w="1"/><text x="100.1140%" y="239.50"></text></g><g><title>page_fault (7 samples, 0.10%)</title><rect x="99.8776%" y="453" width="0.0952%" height="15" fill="rgb(236,182,39)" fg:x="7345" fg:w="7"/><text x="100.1276%" y="463.50"></text></g><g><title>regalloc::analysis_control_flow::InstIxToBlockIxMap::new::cmp_ranges (1 samples, 0.01%)</title><rect x="99.9728%" y="453" width="0.0136%" height="15" fill="rgb(212,144,35)" fg:x="7352" fg:w="1"/><text x="100.2228%" y="463.50"></text></g><g><title>all (7,354 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(228,63,44)" fg:x="0" fg:w="7354"/><text x="0.2500%" y="495.50"></text></g><g><title>wasmtime (7,349 samples, 99.93%)</title><rect x="0.0680%" y="469" width="99.9320%" height="15" fill="rgb(228,109,6)" fg:x="5" fg:w="7349"/><text x="0.3180%" y="479.50">wasmtime</text></g><g><title>thermal_interrupt (1 samples, 0.01%)</title><rect x="99.9864%" y="453" width="0.0136%" height="15" fill="rgb(238,117,24)" fg:x="7353" fg:w="1"/><text x="100.2364%" y="463.50"></text></g></svg></svg>